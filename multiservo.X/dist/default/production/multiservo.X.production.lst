

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 01 17:41:02 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     _RCREG	set	4014
    74  0000                     _TXREG	set	4013
    75  0000                     _SPBRG	set	4015
    76  0000                     _BAUDCON	set	4024
    77  0000                     _TRISCbits	set	3988
    78  0000                     _TRISD	set	3989
    79  0000                     _PIR1bits	set	3998
    80  0000                     _RCSTAbits	set	4011
    81  0000                     _TXSTAbits	set	4012
    82  0000                     _BAUDCONbits	set	4024
    83  0000                     _ADCON1	set	4033
    84  0000                     _LATBbits	set	3978
    85  0000                     _T1CONbits	set	4045
    86  0000                     _T0CONbits	set	4053
    87  0000                     _PORTBbits	set	3969
    88  0000                     _LATB	set	3978
    89  0000                     _TRISB	set	3987
    90  0000                     _ADCON1bits	set	4033
    91  0000                     _T1CON	set	4045
    92  0000                     _T0CON	set	4053
    93  0000                     _INTCON2bits	set	4081
    94  0000                     _INTCONbits	set	4082
    95  0000                     _TMR0	set	4054
    96  0000                     _PORTD	set	3971
    97  0000                     _TMR1	set	4046
    98  0000                     _RCSTA	set	4011
    99  0000                     _TXSTA	set	4012
   100  0000                     _PORTEbits	set	3972
   101  0000                     _TRISEbits	set	3990
   102  0000                     _SPBRGH	set	4016
   103                           
   104                           	psect	smallconst
   105  000800                     __psmallconst:
   106                           	callstack 0
   107  000800  00                 	db	0
   108  000801                     STR_1:
   109  000801  52                 	db	82	;'R'
   110  000802  6F                 	db	111	;'o'
   111  000803  62                 	db	98	;'b'
   112  000804  6F                 	db	111	;'o'
   113  000805  74                 	db	116	;'t'
   114  000806  20                 	db	32
   115  000807  7A                 	db	122	;'z'
   116  000808  6F                 	db	111	;'o'
   117  000809  77                 	db	119	;'w'
   118  00080A  69                 	db	105	;'i'
   119  00080B  0D                 	db	13
   120  00080C  0A                 	db	10
   121  00080D  00                 	db	0
   122  00080E  00                 	db	0	; dummy byte at the end
   123  0000                     
   124                           ; #config settings
   125                           
   126                           	psect	cinit
   127  000EE2                     __pcinit:
   128                           	callstack 0
   129  000EE2                     start_initialization:
   130                           	callstack 0
   131  000EE2                     __initialization:
   132                           	callstack 0
   133                           
   134                           ; Clear objects allocated to COMRAM (57 bytes)
   135  000EE2  EE00  F001         	lfsr	0,__pbssCOMRAM
   136  000EE6  0E39               	movlw	57
   137  000EE8                     clear_0:
   138  000EE8  6AEE               	clrf	postinc0,c
   139  000EEA  06E8               	decf	wreg,f,c
   140  000EEC  E1FD               	bnz	clear_0
   141  000EEE                     end_of_initialization:
   142                           	callstack 0
   143  000EEE                     __end_of__initialization:
   144                           	callstack 0
   145  000EEE  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   146  000EF0  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   147  000EF2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   148  000EF4  6EF8               	movwf	tblptru,c
   149  000EF6  0E08               	movlw	high __Lsmallconst
   150  000EF8  6EF7               	movwf	tblptrh,c
   151  000EFA  0100               	movlb	0
   152  000EFC  EF5B  F006         	goto	_main	;jump to C main() function
   153                           
   154                           	psect	bssCOMRAM
   155  000001                     __pbssCOMRAM:
   156                           	callstack 0
   157  000001                     _bandera_servo@FuncionesMultiservo$F521:
   158                           	callstack 0
   159  000001                     	ds	8
   160  000009                     _bandera_servo:
   161                           	callstack 0
   162  000009                     	ds	8
   163  000011                     _num4:
   164                           	callstack 0
   165  000011                     	ds	2
   166  000013                     _num3:
   167                           	callstack 0
   168  000013                     	ds	2
   169  000015                     _num2:
   170                           	callstack 0
   171  000015                     	ds	2
   172  000017                     _num1:
   173                           	callstack 0
   174  000017                     	ds	2
   175  000019                     _num:
   176                           	callstack 0
   177  000019                     	ds	2
   178  00001B                     _pos_servo4@FuncionesMultiservo$F533:
   179                           	callstack 0
   180  00001B                     	ds	1
   181  00001C                     _pos_servo3@FuncionesMultiservo$F532:
   182                           	callstack 0
   183  00001C                     	ds	1
   184  00001D                     _pos_servo2@FuncionesMultiservo$F531:
   185                           	callstack 0
   186  00001D                     	ds	1
   187  00001E                     _pos_servo1@FuncionesMultiservo$F530:
   188                           	callstack 0
   189  00001E                     	ds	1
   190  00001F                     	ds	1
   191  000020                     	ds	1
   192  000021                     	ds	1
   193  000022                     	ds	1
   194  000023                     _servo_4@FuncionesMultiservo$F525:
   195                           	callstack 0
   196  000023                     	ds	1
   197  000024                     _servo_3@FuncionesMultiservo$F524:
   198                           	callstack 0
   199  000024                     	ds	1
   200  000025                     _servo_2@FuncionesMultiservo$F523:
   201                           	callstack 0
   202  000025                     	ds	1
   203  000026                     _servo_1@FuncionesMultiservo$F522:
   204                           	callstack 0
   205  000026                     	ds	1
   206  000027                     _servo_bit:
   207                           	callstack 0
   208  000027                     	ds	1
   209  000028                     _contador_servos:
   210                           	callstack 0
   211  000028                     	ds	1
   212  000029                     _LCD_GuardaDatoAux:
   213                           	callstack 0
   214  000029                     	ds	1
   215  00002A                     _LCD_GuardaDato:
   216                           	callstack 0
   217  00002A                     	ds	1
   218  00002B                     _LCD_GuardaTRISD:
   219                           	callstack 0
   220  00002B                     	ds	1
   221  00002C                     _aux_port:
   222                           	callstack 0
   223  00002C                     	ds	1
   224  00002D                     _lcd_dato:
   225                           	callstack 0
   226  00002D                     	ds	1
   227  00002E                     _pos_servo4:
   228                           	callstack 0
   229  00002E                     	ds	1
   230  00002F                     _pos_servo3:
   231                           	callstack 0
   232  00002F                     	ds	1
   233  000030                     _pos_servo2:
   234                           	callstack 0
   235  000030                     	ds	1
   236  000031                     _pos_servo1:
   237                           	callstack 0
   238  000031                     	ds	1
   239  000032                     	ds	1
   240  000033                     	ds	1
   241  000034                     	ds	1
   242  000035                     	ds	1
   243  000036                     _servo_4:
   244                           	callstack 0
   245  000036                     	ds	1
   246  000037                     _servo_3:
   247                           	callstack 0
   248  000037                     	ds	1
   249  000038                     _servo_2:
   250                           	callstack 0
   251  000038                     	ds	1
   252  000039                     _servo_1:
   253                           	callstack 0
   254  000039                     	ds	1
   255                           
   256                           	psect	cstackCOMRAM
   257  00003A                     __pcstackCOMRAM:
   258                           	callstack 0
   259  00003A                     Temporizaciones@pos_servo:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x0
   263  00003A                     	ds	1
   264  00003B                     Temporizaciones@i:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x1
   268  00003B                     	ds	1
   269  00003C                     Temporizaciones@i_504:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x2
   273  00003C                     	ds	1
   274  00003D                     Temporizaciones@contador:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x3
   278  00003D                     	ds	1
   279  00003E                     ?___lldiv:
   280                           	callstack 0
   281  00003E                     servos@num_2:
   282                           	callstack 0
   283  00003E                     LCD_EscribeLCD@comando:
   284                           	callstack 0
   285  00003E                     Uart_Send_Char@txData:
   286                           	callstack 0
   287  00003E                     ___lldiv@dividend:
   288                           	callstack 0
   289                           
   290                           ; 4 bytes @ 0x4
   291  00003E                     	ds	1
   292  00003F                     ??_LCD_Caracter:
   293  00003F                     ??_LCD_EnviaComando:
   294  00003F                     servos@num_3:
   295                           	callstack 0
   296  00003F                     Uart_Send_String@info:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x5
   300  00003F                     	ds	1
   301  000040                     servos@num_4:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x6
   305  000040                     	ds	1
   306  000041                     servos@vel_:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x7
   310  000041                     	ds	1
   311  000042                     LCD_EnviaComando@comandos:
   312                           	callstack 0
   313  000042                     LCD_Caracter@datos:
   314                           	callstack 0
   315  000042                     ___lldiv@divisor:
   316                           	callstack 0
   317                           
   318                           ; 4 bytes @ 0x8
   319  000042                     	ds	1
   320  000043                     ??_LCD_Iniciliza:
   321  000043                     ??_servos:
   322  000043                     
   323                           ; 1 bytes @ 0x9
   324  000043                     	ds	1
   325  000044                     servos@num_1:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0xA
   329  000044                     	ds	1
   330  000045                     ??_andar:
   331                           
   332                           ; 1 bytes @ 0xB
   333  000045                     	ds	1
   334  000046                     ___lldiv@quotient:
   335                           	callstack 0
   336                           
   337                           ; 4 bytes @ 0xC
   338  000046                     	ds	4
   339  00004A                     ___lldiv@counter:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x10
   343  00004A                     	ds	1
   344  00004B                     Uart_Init@baud:
   345                           	callstack 0
   346                           
   347                           ; 4 bytes @ 0x11
   348  00004B                     	ds	4
   349  00004F                     ??_Uart_Init:
   350                           
   351                           ; 1 bytes @ 0x15
   352  00004F                     	ds	4
   353  000053                     Uart_Init@vx:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x19
   357  000053                     	ds	2
   358  000055                     
   359                           ; 1 bytes @ 0x1B
   360 ;;
   361 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   362 ;;
   363 ;; *************** function _main *****************
   364 ;; Defined at:
   365 ;;		line 65 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   379 ;;      Params:         0       0       0       0       0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0       0       0       0       0
   381 ;;      Temps:          0       0       0       0       0       0       0       0       0
   382 ;;      Totals:         0       0       0       0       0       0       0       0       0
   383 ;;Total ram usage:        0 bytes
   384 ;; Hardware stack levels required when called: 7
   385 ;; This function calls:
   386 ;;		_LCD_Iniciliza
   387 ;;		_Uart_Init
   388 ;;		_Uart_Send_String
   389 ;;		_andar
   390 ;;		_borraPosiciones
   391 ;;		_mensajeInicial
   392 ;;		_posicionInicial
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text0
   399  000CB6                     __ptext0:
   400                           	callstack 0
   401  000CB6                     _main:
   402                           	callstack 24
   403  000CB6                     
   404                           ;main.c: 66:     LCD_Iniciliza();
   405  000CB6  EC23  F006         	call	_LCD_Iniciliza	;wreg free
   406                           
   407                           ;main.c: 67:     Uart_Init(9600);
   408  000CBA  0E80               	movlw	128
   409  000CBC  6E4B               	movwf	Uart_Init@baud^0,c
   410  000CBE  0E25               	movlw	37
   411  000CC0  6E4C               	movwf	(Uart_Init@baud+1)^0,c
   412  000CC2  0E00               	movlw	0
   413  000CC4  6E4D               	movwf	(Uart_Init@baud+2)^0,c
   414  000CC6  0E00               	movlw	0
   415  000CC8  6E4E               	movwf	(Uart_Init@baud+3)^0,c
   416  000CCA  EC92  F006         	call	_Uart_Init	;wreg free
   417  000CCE                     
   418                           ;main.c: 69:     ADCON1bits.PCFG = 0b1111;
   419  000CCE  0E0F               	movlw	15
   420  000CD0  12C1               	iorwf	193,f,c	;volatile
   421  000CD2                     
   422                           ;main.c: 70:     INTCON2bits.nRBPU = 0;
   423  000CD2  9EF1               	bcf	241,7,c	;volatile
   424  000CD4                     
   425                           ;main.c: 71:     TRISB = 0x0F;
   426  000CD4  0E0F               	movlw	15
   427  000CD6  6E93               	movwf	147,c	;volatile
   428  000CD8                     
   429                           ;main.c: 72:     LATB = 0xF0;
   430  000CD8  0EF0               	movlw	240
   431  000CDA  6E8A               	movwf	138,c	;volatile
   432  000CDC                     
   433                           ;main.c: 74:     T0CON = 0b00000000;
   434  000CDC  0E00               	movlw	0
   435  000CDE  6ED5               	movwf	213,c	;volatile
   436  000CE0                     
   437                           ;main.c: 75:     INTCONbits.GIE = 1;
   438  000CE0  8EF2               	bsf	242,7,c	;volatile
   439  000CE2                     
   440                           ;main.c: 76:     INTCONbits.TMR0IE = 1;
   441  000CE2  8AF2               	bsf	242,5,c	;volatile
   442  000CE4                     
   443                           ;main.c: 77:     T0CONbits.TMR0ON = 1;
   444  000CE4  8ED5               	bsf	213,7,c	;volatile
   445                           
   446                           ;main.c: 79:     mensajeInicial();
   447  000CE6  ECFD  F006         	call	_mensajeInicial	;wreg free
   448  000CEA                     
   449                           ;main.c: 81:     contador_servos = 0;
   450  000CEA  0E00               	movlw	0
   451  000CEC  6E28               	movwf	_contador_servos^0,c
   452  000CEE                     
   453                           ;main.c: 82:     borraPosiciones();
   454  000CEE  EC99  F007         	call	_borraPosiciones	;wreg free
   455  000CF2                     
   456                           ;main.c: 83:     posicionInicial();
   457  000CF2  EC80  F007         	call	_posicionInicial	;wreg free
   458  000CF6                     
   459                           ;main.c: 85:     Uart_Send_String("Robot zowi\r\n");
   460  000CF6  0E01               	movlw	low STR_1
   461  000CF8  6E3F               	movwf	Uart_Send_String@info^0,c
   462  000CFA  0E08               	movlw	high STR_1
   463  000CFC  6E40               	movwf	(Uart_Send_String@info+1)^0,c
   464  000CFE  EC1C  F007         	call	_Uart_Send_String	;wreg free
   465  000D02                     l2054:
   466                           
   467                           ;main.c: 89:         if (PORTBbits.RB0 == 0) {
   468  000D02  B081               	btfsc	129,0,c	;volatile
   469  000D04  EF86  F006         	goto	u571
   470  000D08  EF88  F006         	goto	u570
   471  000D0C                     u571:
   472  000D0C  EF8C  F006         	goto	l2058
   473  000D10                     u570:
   474  000D10                     
   475                           ;main.c: 90:             andar();
   476  000D10  EC8C  F004         	call	_andar	;wreg free
   477                           
   478                           ;main.c: 92:         }else{
   479  000D14  EF81  F006         	goto	l2054
   480  000D18                     l2058:
   481                           
   482                           ;main.c: 93:             borraPosiciones();
   483  000D18  EC99  F007         	call	_borraPosiciones	;wreg free
   484  000D1C  EF81  F006         	goto	l2054
   485  000D20  EF07  F000         	goto	start
   486  000D24                     __end_of_main:
   487                           	callstack 0
   488                           
   489 ;; *************** function _posicionInicial *****************
   490 ;; Defined at:
   491 ;;		line 87 in file "./FuncionesMultiservo.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   505 ;;      Params:         0       0       0       0       0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0       0       0       0       0
   508 ;;      Totals:         0       0       0       0       0       0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels used: 1
   511 ;; Hardware stack levels required when called: 4
   512 ;; This function calls:
   513 ;;		_servos
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text1
   520  000F00                     __ptext1:
   521                           	callstack 0
   522  000F00                     _posicionInicial:
   523                           	callstack 26
   524  000F00                     
   525                           ;./FuncionesMultiservo.c: 88:     servos(36, 36, 36, 36, 500);
   526  000F00  0E24               	movlw	36
   527  000F02  6E3E               	movwf	servos@num_2^0,c
   528  000F04  0E24               	movlw	36
   529  000F06  6E3F               	movwf	servos@num_3^0,c
   530  000F08  0E24               	movlw	36
   531  000F0A  6E40               	movwf	servos@num_4^0,c
   532  000F0C  0E01               	movlw	1
   533  000F0E  6E42               	movwf	(servos@vel_+1)^0,c
   534  000F10  0EF4               	movlw	244
   535  000F12  6E41               	movwf	servos@vel_^0,c
   536  000F14  0E24               	movlw	36
   537  000F16  ECC9  F006         	call	_servos
   538  000F1A  0012               	return		;funcret
   539  000F1C                     __end_of_posicionInicial:
   540                           	callstack 0
   541                           
   542 ;; *************** function _mensajeInicial *****************
   543 ;; Defined at:
   544 ;;		line 45 in file "main.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   558 ;;      Params:         0       0       0       0       0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0       0       0
   561 ;;      Totals:         0       0       0       0       0       0       0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels used: 1
   564 ;; Hardware stack levels required when called: 5
   565 ;; This function calls:
   566 ;;		_LCD_Caracter
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text2
   573  000DFA                     __ptext2:
   574                           	callstack 0
   575  000DFA                     _mensajeInicial:
   576                           	callstack 25
   577  000DFA                     
   578                           ;main.c: 46:     LCD_Caracter('R');
   579  000DFA  0E52               	movlw	82
   580  000DFC  ECED  F004         	call	_LCD_Caracter
   581                           
   582                           ;main.c: 47:     LCD_Caracter('o');
   583  000E00  0E6F               	movlw	111
   584  000E02  ECED  F004         	call	_LCD_Caracter
   585                           
   586                           ;main.c: 48:     LCD_Caracter('b');
   587  000E06  0E62               	movlw	98
   588  000E08  ECED  F004         	call	_LCD_Caracter
   589                           
   590                           ;main.c: 49:     LCD_Caracter('o');
   591  000E0C  0E6F               	movlw	111
   592  000E0E  ECED  F004         	call	_LCD_Caracter
   593                           
   594                           ;main.c: 50:     LCD_Caracter('t');
   595  000E12  0E74               	movlw	116
   596  000E14  ECED  F004         	call	_LCD_Caracter
   597                           
   598                           ;main.c: 51:     LCD_Caracter(' ');
   599  000E18  0E20               	movlw	32
   600  000E1A  ECED  F004         	call	_LCD_Caracter
   601                           
   602                           ;main.c: 52:     LCD_Caracter('Z');
   603  000E1E  0E5A               	movlw	90
   604  000E20  ECED  F004         	call	_LCD_Caracter
   605                           
   606                           ;main.c: 53:     LCD_Caracter('o');
   607  000E24  0E6F               	movlw	111
   608  000E26  ECED  F004         	call	_LCD_Caracter
   609                           
   610                           ;main.c: 54:     LCD_Caracter('w');
   611  000E2A  0E77               	movlw	119
   612  000E2C  ECED  F004         	call	_LCD_Caracter
   613                           
   614                           ;main.c: 55:     LCD_Caracter('i');
   615  000E30  0E69               	movlw	105
   616  000E32  ECED  F004         	call	_LCD_Caracter
   617  000E36  0012               	return		;funcret
   618  000E38                     __end_of_mensajeInicial:
   619                           	callstack 0
   620                           
   621 ;; *************** function _LCD_Caracter *****************
   622 ;; Defined at:
   623 ;;		line 43 in file "Libreria_LCD.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  datos           1    wreg     unsigned char 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  datos           1    8[COMRAM] unsigned char 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   637 ;;      Params:         0       0       0       0       0       0       0       0       0
   638 ;;      Locals:         1       0       0       0       0       0       0       0       0
   639 ;;      Temps:          3       0       0       0       0       0       0       0       0
   640 ;;      Totals:         4       0       0       0       0       0       0       0       0
   641 ;;Total ram usage:        4 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; Hardware stack levels required when called: 4
   644 ;; This function calls:
   645 ;;		_LCD_EscribeLCD
   646 ;; This function is called by:
   647 ;;		_mensajeInicial
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text3
   652  0009DA                     __ptext3:
   653                           	callstack 0
   654  0009DA                     _LCD_Caracter:
   655                           	callstack 25
   656                           
   657                           ;incstack = 0
   658                           ;LCD_Caracter@datos stored from wreg
   659  0009DA  6E42               	movwf	LCD_Caracter@datos^0,c
   660  0009DC                     
   661                           ;Libreria_LCD.c: 44:     PORTEbits.RE0 = 1;
   662  0009DC  8084               	bsf	132,0,c	;volatile
   663  0009DE                     
   664                           ;Libreria_LCD.c: 46:     LCD_GuardaDato = datos;
   665  0009DE  C042  F02A         	movff	LCD_Caracter@datos,_LCD_GuardaDato
   666  0009E2                     
   667                           ;Libreria_LCD.c: 47:     LCD_EscribeLCD(datos);
   668  0009E2  5042               	movf	LCD_Caracter@datos^0,w,c
   669  0009E4  EC37  F007         	call	_LCD_EscribeLCD
   670  0009E8                     
   671                           ;Libreria_LCD.c: 49:     num3 = datos & 0x0F;
   672  0009E8  C042  F03F         	movff	LCD_Caracter@datos,??_LCD_Caracter
   673  0009EC  0E0F               	movlw	15
   674  0009EE  163F               	andwf	??_LCD_Caracter^0,f,c
   675  0009F0  503F               	movf	??_LCD_Caracter^0,w,c
   676  0009F2  6E13               	movwf	_num3^0,c
   677  0009F4  6A14               	clrf	(_num3+1)^0,c
   678  0009F6                     
   679                           ;Libreria_LCD.c: 50:     num4 = datos & 0xF0;
   680  0009F6  C042  F03F         	movff	LCD_Caracter@datos,??_LCD_Caracter
   681  0009FA  0EF0               	movlw	240
   682  0009FC  163F               	andwf	??_LCD_Caracter^0,f,c
   683  0009FE  503F               	movf	??_LCD_Caracter^0,w,c
   684  000A00  6E11               	movwf	_num4^0,c
   685  000A02  6A12               	clrf	(_num4+1)^0,c
   686  000A04                     
   687                           ;Libreria_LCD.c: 51:     num3 = num3 << 4;
   688  000A04  C013  F03F         	movff	_num3,??_LCD_Caracter
   689  000A08  C014  F040         	movff	_num3+1,??_LCD_Caracter+1
   690  000A0C  3A3F               	swapf	??_LCD_Caracter^0,f,c
   691  000A0E  3A40               	swapf	(??_LCD_Caracter+1)^0,f,c
   692  000A10  0EF0               	movlw	240
   693  000A12  1640               	andwf	(??_LCD_Caracter+1)^0,f,c
   694  000A14  503F               	movf	??_LCD_Caracter^0,w,c
   695  000A16  0B0F               	andlw	15
   696  000A18  1240               	iorwf	(??_LCD_Caracter+1)^0,f,c
   697  000A1A  0EF0               	movlw	240
   698  000A1C  163F               	andwf	??_LCD_Caracter^0,f,c
   699  000A1E  C03F  F013         	movff	??_LCD_Caracter,_num3
   700  000A22  C040  F014         	movff	??_LCD_Caracter+1,_num3+1
   701  000A26                     
   702                           ;Libreria_LCD.c: 52:     num4 = num4 >> 4;
   703  000A26  C011  F03F         	movff	_num4,??_LCD_Caracter
   704  000A2A  C012  F040         	movff	_num4+1,??_LCD_Caracter+1
   705  000A2E  0E04               	movlw	4
   706  000A30  6E41               	movwf	(??_LCD_Caracter+2)^0,c
   707  000A32                     u45:
   708  000A32  3440               	rlcf	(??_LCD_Caracter+1)^0,w,c
   709  000A34  3240               	rrcf	(??_LCD_Caracter+1)^0,f,c
   710  000A36  323F               	rrcf	??_LCD_Caracter^0,f,c
   711  000A38  2E41               	decfsz	(??_LCD_Caracter+2)^0,f,c
   712  000A3A  EF19  F005         	goto	u45
   713  000A3E  C03F  F011         	movff	??_LCD_Caracter,_num4
   714  000A42  C040  F012         	movff	??_LCD_Caracter+1,_num4+1
   715  000A46                     
   716                           ;Libreria_LCD.c: 53:     LCD_GuardaDatoAux = num3 ^ num4;
   717  000A46  5013               	movf	_num3^0,w,c
   718  000A48  1811               	xorwf	_num4^0,w,c
   719  000A4A  6E29               	movwf	_LCD_GuardaDatoAux^0,c
   720  000A4C                     
   721                           ;Libreria_LCD.c: 54:     LCD_EscribeLCD(LCD_GuardaDatoAux );
   722  000A4C  5029               	movf	_LCD_GuardaDatoAux^0,w,c
   723  000A4E  EC37  F007         	call	_LCD_EscribeLCD
   724  000A52                     
   725                           ;Libreria_LCD.c: 56:     if(PORTEbits.RE0 == 1){
   726  000A52  A084               	btfss	132,0,c	;volatile
   727  000A54  EF2E  F005         	goto	u51
   728  000A58  EF30  F005         	goto	u50
   729  000A5C                     u51:
   730  000A5C  EF36  F005         	goto	l1174
   731  000A60                     u50:
   732  000A60                     
   733                           ;Libreria_LCD.c: 57:         _delay((unsigned long)((200)*(20000000UL/4000000.0)));
   734  000A60  0EC8               	movlw	200
   735  000A62                     u687:
   736  000A62  D000               	nop2	
   737  000A64  2EE8               	decfsz	wreg,f,c
   738  000A66  D7FD               	bra	u687
   739                           
   740                           ;Libreria_LCD.c: 58:     }else{
   741  000A68  EF3E  F005         	goto	l315
   742  000A6C                     l1174:
   743                           
   744                           ;Libreria_LCD.c: 59:         _delay((unsigned long)((5)*(20000000UL/4000.0)));
   745  000A6C  0E21               	movlw	33
   746  000A6E  6E3F               	movwf	??_LCD_Caracter^0,c
   747  000A70  0E76               	movlw	118
   748  000A72                     u697:
   749  000A72  2EE8               	decfsz	wreg,f,c
   750  000A74  D7FE               	bra	u697
   751  000A76  2E3F               	decfsz	??_LCD_Caracter^0,f,c
   752  000A78  D7FC               	bra	u697
   753  000A7A  D000               	nop2	
   754  000A7C                     l315:
   755  000A7C  0012               	return		;funcret
   756  000A7E                     __end_of_LCD_Caracter:
   757                           	callstack 0
   758                           
   759 ;; *************** function _borraPosiciones *****************
   760 ;; Defined at:
   761 ;;		line 80 in file "./FuncionesMultiservo.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   775 ;;      Params:         0       0       0       0       0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0       0       0
   778 ;;      Totals:         0       0       0       0       0       0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; Hardware stack levels required when called: 3
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text4
   790  000F32                     __ptext4:
   791                           	callstack 0
   792  000F32                     _borraPosiciones:
   793                           	callstack 27
   794  000F32                     
   795                           ;./FuncionesMultiservo.c: 81:     pos_servo1 = 0;
   796  000F32  0E00               	movlw	0
   797  000F34  6E31               	movwf	_pos_servo1^0,c
   798                           
   799                           ;./FuncionesMultiservo.c: 82:     pos_servo2 = 0;
   800  000F36  0E00               	movlw	0
   801  000F38  6E30               	movwf	_pos_servo2^0,c
   802                           
   803                           ;./FuncionesMultiservo.c: 83:     pos_servo3 = 0;
   804  000F3A  0E00               	movlw	0
   805  000F3C  6E2F               	movwf	_pos_servo3^0,c
   806                           
   807                           ;./FuncionesMultiservo.c: 84:     pos_servo4 = 0;
   808  000F3E  0E00               	movlw	0
   809  000F40  6E2E               	movwf	_pos_servo4^0,c
   810  000F42  0012               	return		;funcret
   811  000F44                     __end_of_borraPosiciones:
   812                           	callstack 0
   813                           
   814 ;; *************** function _andar *****************
   815 ;; Defined at:
   816 ;;		line 210 in file "./FuncionesMultiservo.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         0       0       0       0       0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0
   832 ;;      Temps:          2       0       0       0       0       0       0       0       0
   833 ;;      Totals:         2       0       0       0       0       0       0       0       0
   834 ;;Total ram usage:        2 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; Hardware stack levels required when called: 4
   837 ;; This function calls:
   838 ;;		_servos
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text5
   845  000918                     __ptext5:
   846                           	callstack 0
   847  000918                     _andar:
   848                           	callstack 26
   849  000918                     
   850                           ;./FuncionesMultiservo.c: 212:     servos(30, 45, 45, 30, 100);
   851  000918  0E2D               	movlw	45
   852  00091A  6E3E               	movwf	servos@num_2^0,c
   853  00091C  0E2D               	movlw	45
   854  00091E  6E3F               	movwf	servos@num_3^0,c
   855  000920  0E1E               	movlw	30
   856  000922  6E40               	movwf	servos@num_4^0,c
   857  000924  0E00               	movlw	0
   858  000926  6E42               	movwf	(servos@vel_+1)^0,c
   859  000928  0E64               	movlw	100
   860  00092A  6E41               	movwf	servos@vel_^0,c
   861  00092C  0E1E               	movlw	30
   862  00092E  ECC9  F006         	call	_servos
   863  000932                     
   864                           ;./FuncionesMultiservo.c: 213:     _delay((unsigned long)((200)*(20000000UL/4000.0)));
   865  000932  0E06               	movlw	6
   866  000934  6E46               	movwf	(??_andar+1)^0,c
   867  000936  0E13               	movlw	19
   868  000938  6E45               	movwf	??_andar^0,c
   869  00093A  0EAE               	movlw	174
   870  00093C                     u707:
   871  00093C  2EE8               	decfsz	wreg,f,c
   872  00093E  D7FE               	bra	u707
   873  000940  2E45               	decfsz	??_andar^0,f,c
   874  000942  D7FC               	bra	u707
   875  000944  2E46               	decfsz	(??_andar+1)^0,f,c
   876  000946  D7FA               	bra	u707
   877  000948                     
   878                           ;./FuncionesMultiservo.c: 215:     servos(37, 45, 45, 37, 100);
   879  000948  0E2D               	movlw	45
   880  00094A  6E3E               	movwf	servos@num_2^0,c
   881  00094C  0E2D               	movlw	45
   882  00094E  6E3F               	movwf	servos@num_3^0,c
   883  000950  0E25               	movlw	37
   884  000952  6E40               	movwf	servos@num_4^0,c
   885  000954  0E00               	movlw	0
   886  000956  6E42               	movwf	(servos@vel_+1)^0,c
   887  000958  0E64               	movlw	100
   888  00095A  6E41               	movwf	servos@vel_^0,c
   889  00095C  0E25               	movlw	37
   890  00095E  ECC9  F006         	call	_servos
   891                           
   892                           ;./FuncionesMultiservo.c: 216:     _delay((unsigned long)((200)*(20000000UL/4000.0)));
   893  000962  0E06               	movlw	6
   894  000964  6E46               	movwf	(??_andar+1)^0,c
   895  000966  0E13               	movlw	19
   896  000968  6E45               	movwf	??_andar^0,c
   897  00096A  0EAE               	movlw	174
   898  00096C                     u717:
   899  00096C  2EE8               	decfsz	wreg,f,c
   900  00096E  D7FE               	bra	u717
   901  000970  2E45               	decfsz	??_andar^0,f,c
   902  000972  D7FC               	bra	u717
   903  000974  2E46               	decfsz	(??_andar+1)^0,f,c
   904  000976  D7FA               	bra	u717
   905  000978                     
   906                           ;./FuncionesMultiservo.c: 218:     servos(44, 30, 30, 44, 100);
   907  000978  0E1E               	movlw	30
   908  00097A  6E3E               	movwf	servos@num_2^0,c
   909  00097C  0E1E               	movlw	30
   910  00097E  6E3F               	movwf	servos@num_3^0,c
   911  000980  0E2C               	movlw	44
   912  000982  6E40               	movwf	servos@num_4^0,c
   913  000984  0E00               	movlw	0
   914  000986  6E42               	movwf	(servos@vel_+1)^0,c
   915  000988  0E64               	movlw	100
   916  00098A  6E41               	movwf	servos@vel_^0,c
   917  00098C  0E2C               	movlw	44
   918  00098E  ECC9  F006         	call	_servos
   919  000992                     
   920                           ;./FuncionesMultiservo.c: 219:     _delay((unsigned long)((200)*(20000000UL/4000.0)));
   921  000992  0E06               	movlw	6
   922  000994  6E46               	movwf	(??_andar+1)^0,c
   923  000996  0E13               	movlw	19
   924  000998  6E45               	movwf	??_andar^0,c
   925  00099A  0EAE               	movlw	174
   926  00099C                     u727:
   927  00099C  2EE8               	decfsz	wreg,f,c
   928  00099E  D7FE               	bra	u727
   929  0009A0  2E45               	decfsz	??_andar^0,f,c
   930  0009A2  D7FC               	bra	u727
   931  0009A4  2E46               	decfsz	(??_andar+1)^0,f,c
   932  0009A6  D7FA               	bra	u727
   933                           
   934                           ;./FuncionesMultiservo.c: 221:     servos(37, 30, 30, 37, 100);
   935  0009A8  0E1E               	movlw	30
   936  0009AA  6E3E               	movwf	servos@num_2^0,c
   937  0009AC  0E1E               	movlw	30
   938  0009AE  6E3F               	movwf	servos@num_3^0,c
   939  0009B0  0E25               	movlw	37
   940  0009B2  6E40               	movwf	servos@num_4^0,c
   941  0009B4  0E00               	movlw	0
   942  0009B6  6E42               	movwf	(servos@vel_+1)^0,c
   943  0009B8  0E64               	movlw	100
   944  0009BA  6E41               	movwf	servos@vel_^0,c
   945  0009BC  0E25               	movlw	37
   946  0009BE  ECC9  F006         	call	_servos
   947  0009C2                     
   948                           ;./FuncionesMultiservo.c: 222:     _delay((unsigned long)((200)*(20000000UL/4000.0)));
   949  0009C2  0E06               	movlw	6
   950  0009C4  6E46               	movwf	(??_andar+1)^0,c
   951  0009C6  0E13               	movlw	19
   952  0009C8  6E45               	movwf	??_andar^0,c
   953  0009CA  0EAE               	movlw	174
   954  0009CC                     u737:
   955  0009CC  2EE8               	decfsz	wreg,f,c
   956  0009CE  D7FE               	bra	u737
   957  0009D0  2E45               	decfsz	??_andar^0,f,c
   958  0009D2  D7FC               	bra	u737
   959  0009D4  2E46               	decfsz	(??_andar+1)^0,f,c
   960  0009D6  D7FA               	bra	u737
   961  0009D8  0012               	return		;funcret
   962  0009DA                     __end_of_andar:
   963                           	callstack 0
   964                           
   965 ;; *************** function _servos *****************
   966 ;; Defined at:
   967 ;;		line 46 in file "./FuncionesMultiservo.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  num_1           1    wreg     unsigned char 
   970 ;;  num_2           1    4[COMRAM] unsigned char 
   971 ;;  num_3           1    5[COMRAM] unsigned char 
   972 ;;  num_4           1    6[COMRAM] unsigned char 
   973 ;;  vel_            2    7[COMRAM] int 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  num_1           1   10[COMRAM] unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   985 ;;      Params:         5       0       0       0       0       0       0       0       0
   986 ;;      Locals:         1       0       0       0       0       0       0       0       0
   987 ;;      Temps:          1       0       0       0       0       0       0       0       0
   988 ;;      Totals:         7       0       0       0       0       0       0       0       0
   989 ;;Total ram usage:        7 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 3
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_posicionInicial
   996 ;;		_andar
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text6
  1001  000D92                     __ptext6:
  1002                           	callstack 0
  1003  000D92                     _servos:
  1004                           	callstack 26
  1005                           
  1006                           ;incstack = 0
  1007                           ;servos@num_1 stored from wreg
  1008  000D92  6E44               	movwf	servos@num_1^0,c
  1009  000D94                     
  1010                           ;./FuncionesMultiservo.c: 47:     bandera_servo[1] = 1;
  1011  000D94  0E01               	movlw	1
  1012  000D96  6E0A               	movwf	(_bandera_servo+1)^0,c
  1013                           
  1014                           ;./FuncionesMultiservo.c: 48:     bandera_servo[2] = 1;
  1015  000D98  0E01               	movlw	1
  1016  000D9A  6E0B               	movwf	(_bandera_servo+2)^0,c
  1017                           
  1018                           ;./FuncionesMultiservo.c: 49:     bandera_servo[3] = 1;
  1019  000D9C  0E01               	movlw	1
  1020  000D9E  6E0C               	movwf	(_bandera_servo+3)^0,c
  1021                           
  1022                           ;./FuncionesMultiservo.c: 50:     bandera_servo[4] = 1;
  1023  000DA0  0E01               	movlw	1
  1024  000DA2  6E0D               	movwf	(_bandera_servo+4)^0,c
  1025  000DA4                     
  1026                           ;./FuncionesMultiservo.c: 51:     servo_1 = num_1;
  1027  000DA4  C044  F039         	movff	servos@num_1,_servo_1
  1028  000DA8                     
  1029                           ;./FuncionesMultiservo.c: 52:     servo_2 = num_2;
  1030  000DA8  C03E  F038         	movff	servos@num_2,_servo_2
  1031  000DAC                     
  1032                           ;./FuncionesMultiservo.c: 53:     servo_3 = num_3;
  1033  000DAC  C03F  F037         	movff	servos@num_3,_servo_3
  1034  000DB0                     
  1035                           ;./FuncionesMultiservo.c: 54:     servo_4 = num_4;
  1036  000DB0  C040  F036         	movff	servos@num_4,_servo_4
  1037                           
  1038                           ;./FuncionesMultiservo.c: 56:     while(vel_ > 0){
  1039  000DB4  EFE7  F006         	goto	l1936
  1040  000DB8                     l1932:
  1041                           
  1042                           ;./FuncionesMultiservo.c: 57:         vel_--;
  1043  000DB8  0641               	decf	servos@vel_^0,f,c
  1044  000DBA  A0D8               	btfss	status,0,c
  1045  000DBC  0642               	decf	(servos@vel_+1)^0,f,c
  1046  000DBE                     
  1047                           ;./FuncionesMultiservo.c: 58:         _delay((unsigned long)((990)*(20000000UL/4000000.0
      +                          )));
  1048  000DBE  0E07               	movlw	7
  1049  000DC0  6E43               	movwf	??_servos^0,c
  1050  000DC2  0E6C               	movlw	108
  1051  000DC4                     u747:
  1052  000DC4  2EE8               	decfsz	wreg,f,c
  1053  000DC6  D7FE               	bra	u747
  1054  000DC8  2E43               	decfsz	??_servos^0,f,c
  1055  000DCA  D7FC               	bra	u747
  1056  000DCC  D000               	nop2	
  1057  000DCE                     l1936:
  1058                           
  1059                           ;./FuncionesMultiservo.c: 56:     while(vel_ > 0){
  1060  000DCE  BE42               	btfsc	(servos@vel_+1)^0,7,c
  1061  000DD0  EFF4  F006         	goto	u470
  1062  000DD4  5042               	movf	(servos@vel_+1)^0,w,c
  1063  000DD6  E106               	bnz	u471
  1064  000DD8  0441               	decf	servos@vel_^0,w,c
  1065  000DDA  B0D8               	btfsc	status,0,c
  1066  000DDC  EFF2  F006         	goto	u471
  1067  000DE0  EFF4  F006         	goto	u470
  1068  000DE4                     u471:
  1069  000DE4  EFDC  F006         	goto	l1932
  1070  000DE8                     u470:
  1071  000DE8                     
  1072                           ;./FuncionesMultiservo.c: 60:     bandera_servo[1] = 0;
  1073  000DE8  0E00               	movlw	0
  1074  000DEA  6E0A               	movwf	(_bandera_servo+1)^0,c
  1075                           
  1076                           ;./FuncionesMultiservo.c: 61:     bandera_servo[2] = 0;
  1077  000DEC  0E00               	movlw	0
  1078  000DEE  6E0B               	movwf	(_bandera_servo+2)^0,c
  1079                           
  1080                           ;./FuncionesMultiservo.c: 62:     bandera_servo[3] = 0;
  1081  000DF0  0E00               	movlw	0
  1082  000DF2  6E0C               	movwf	(_bandera_servo+3)^0,c
  1083                           
  1084                           ;./FuncionesMultiservo.c: 63:     bandera_servo[4] = 0;
  1085  000DF4  0E00               	movlw	0
  1086  000DF6  6E0D               	movwf	(_bandera_servo+4)^0,c
  1087  000DF8  0012               	return		;funcret
  1088  000DFA                     __end_of_servos:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _Uart_Send_String *****************
  1092 ;; Defined at:
  1093 ;;		line 28 in file "../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  info            2    5[COMRAM] PTR unsigned char 
  1096 ;;		 -> STR_1(13), 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1108 ;;      Params:         2       0       0       0       0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1111 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1112 ;;Total ram usage:        2 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 4
  1115 ;; This function calls:
  1116 ;;		_Uart_Send_Char
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text7
  1123  000E38                     __ptext7:
  1124                           	callstack 0
  1125  000E38                     _Uart_Send_String:
  1126                           	callstack 26
  1127  000E38                     
  1128                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 28: void Uart_Send_
      +                          String(char *info);../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 2
      +                          9: {;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 30:     while(*
      +                          info)
  1129  000E38  EF28  F007         	goto	l1994
  1130  000E3C                     l1990:
  1131                           
  1132                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 31:     {;../../len
      +                          guaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 32:         Uart_Send_Char(*i
      +                          nfo++);
  1133  000E3C  C03F  FFF6         	movff	Uart_Send_String@info,tblptrl
  1134  000E40  C040  FFF7         	movff	Uart_Send_String@info+1,tblptrh
  1135  000E44                     	if	0	;tblptru may be non-zero
  1136  000E44                     	endif
  1137  000E44                     	if	0	;tblptru may be non-zero
  1138  000E44                     	endif
  1139  000E44  0008               	tblrd		*
  1140  000E46  50F5               	movf	tablat,w,c
  1141  000E48  EC8E  F007         	call	_Uart_Send_Char
  1142  000E4C  4A3F               	infsnz	Uart_Send_String@info^0,f,c
  1143  000E4E  2A40               	incf	(Uart_Send_String@info+1)^0,f,c
  1144  000E50                     l1994:
  1145                           
  1146                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 30:     while(*info
      +                          )
  1147  000E50  C03F  FFF6         	movff	Uart_Send_String@info,tblptrl
  1148  000E54  C040  FFF7         	movff	Uart_Send_String@info+1,tblptrh
  1149  000E58                     	if	0	;tblptru may be non-zero
  1150  000E58                     	endif
  1151  000E58                     	if	0	;tblptru may be non-zero
  1152  000E58                     	endif
  1153  000E58  0008               	tblrd		*
  1154  000E5A  50F5               	movf	tablat,w,c
  1155  000E5C  0900               	iorlw	0
  1156  000E5E  A4D8               	btfss	status,2,c
  1157  000E60  EF34  F007         	goto	u521
  1158  000E64  EF36  F007         	goto	u520
  1159  000E68                     u521:
  1160  000E68  EF1E  F007         	goto	l1990
  1161  000E6C                     u520:
  1162  000E6C  0012               	return		;funcret
  1163  000E6E                     __end_of_Uart_Send_String:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _Uart_Send_Char *****************
  1167 ;; Defined at:
  1168 ;;		line 22 in file "../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  txData          1    wreg     unsigned char 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  txData          1    4[COMRAM] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0
  1183 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1185 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1186 ;;Total ram usage:        1 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 3
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_Uart_Send_String
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text8
  1197  000F1C                     __ptext8:
  1198                           	callstack 0
  1199  000F1C                     _Uart_Send_Char:
  1200                           	callstack 26
  1201                           
  1202                           ;incstack = 0
  1203                           ;Uart_Send_Char@txData stored from wreg
  1204  000F1C  6E3E               	movwf	Uart_Send_Char@txData^0,c
  1205  000F1E                     l387:
  1206  000F1E  A2AC               	btfss	172,1,c	;volatile
  1207  000F20  EF94  F007         	goto	u81
  1208  000F24  EF96  F007         	goto	u80
  1209  000F28                     u81:
  1210  000F28  EF8F  F007         	goto	l387
  1211  000F2C                     u80:
  1212  000F2C                     
  1213                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 25:     TXREG = txD
      +                          ata;
  1214  000F2C  C03E  FFAD         	movff	Uart_Send_Char@txData,4013	;volatile
  1215  000F30  0012               	return		;funcret
  1216  000F32                     __end_of_Uart_Send_Char:
  1217                           	callstack 0
  1218                           
  1219 ;; *************** function _Uart_Init *****************
  1220 ;; Defined at:
  1221 ;;		line 4 in file "../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  baud            4   17[COMRAM] unsigned long 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  vx              2   25[COMRAM] unsigned int 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1235 ;;      Params:         4       0       0       0       0       0       0       0       0
  1236 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1237 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1238 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1239 ;;Total ram usage:       10 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; Hardware stack levels required when called: 4
  1242 ;; This function calls:
  1243 ;;		___lldiv
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text9
  1250  000D24                     __ptext9:
  1251                           	callstack 0
  1252  000D24                     _Uart_Init:
  1253                           	callstack 26
  1254  000D24                     
  1255                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 4: void Uart_Init(u
      +                          nsigned long baud);../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 5
      +                          : {;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 6:     TRISCbits
      +                          .RC6 = 0;
  1256  000D24  9C94               	bcf	148,6,c	;volatile
  1257                           
  1258                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 7:     TRISCbits.RC
      +                          7 = 1;
  1259  000D26  8E94               	bsf	148,7,c	;volatile
  1260  000D28                     
  1261                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 8:     TXSTA = 0x24
      +                          ;
  1262  000D28  0E24               	movlw	36
  1263  000D2A  6EAC               	movwf	172,c	;volatile
  1264                           
  1265                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 9:     RCSTA = 0x90
      +                          ;
  1266  000D2C  0E90               	movlw	144
  1267  000D2E  6EAB               	movwf	171,c	;volatile
  1268                           
  1269                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 10:     BAUDCON = 0
      +                          x00;
  1270  000D30  0E00               	movlw	0
  1271  000D32  6EB8               	movwf	184,c	;volatile
  1272  000D34                     
  1273                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 11:     BAUDCONbits
      +                          .BRG16 = 1;
  1274  000D34  86B8               	bsf	184,3,c	;volatile
  1275  000D36                     
  1276                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 12:     unsigned in
      +                          t vx = (20000000/(baud*4))-1;
  1277  000D36  0E00               	movlw	0
  1278  000D38  6E3E               	movwf	___lldiv@dividend^0,c
  1279  000D3A  0E2D               	movlw	45
  1280  000D3C  6E3F               	movwf	(___lldiv@dividend+1)^0,c
  1281  000D3E  0E31               	movlw	49
  1282  000D40  6E40               	movwf	(___lldiv@dividend+2)^0,c
  1283  000D42  0E01               	movlw	1
  1284  000D44  6E41               	movwf	(___lldiv@dividend+3)^0,c
  1285  000D46  C04B  F04F         	movff	Uart_Init@baud,??_Uart_Init
  1286  000D4A  C04C  F050         	movff	Uart_Init@baud+1,??_Uart_Init+1
  1287  000D4E  C04D  F051         	movff	Uart_Init@baud+2,??_Uart_Init+2
  1288  000D52  C04E  F052         	movff	Uart_Init@baud+3,??_Uart_Init+3
  1289  000D56  0E02               	movlw	2
  1290  000D58                     u515:
  1291  000D58  90D8               	bcf	status,0,c
  1292  000D5A  364F               	rlcf	??_Uart_Init^0,f,c
  1293  000D5C  3650               	rlcf	(??_Uart_Init+1)^0,f,c
  1294  000D5E  3651               	rlcf	(??_Uart_Init+2)^0,f,c
  1295  000D60  3652               	rlcf	(??_Uart_Init+3)^0,f,c
  1296  000D62  2EE8               	decfsz	wreg,f,c
  1297  000D64  EFAC  F006         	goto	u515
  1298  000D68  C04F  F042         	movff	??_Uart_Init,___lldiv@divisor
  1299  000D6C  C050  F043         	movff	??_Uart_Init+1,___lldiv@divisor+1
  1300  000D70  C051  F044         	movff	??_Uart_Init+2,___lldiv@divisor+2
  1301  000D74  C052  F045         	movff	??_Uart_Init+3,___lldiv@divisor+3
  1302  000D78  EC3F  F005         	call	___lldiv	;wreg free
  1303  000D7C  0EFF               	movlw	255
  1304  000D7E  243E               	addwf	?___lldiv^0,w,c
  1305  000D80  6E53               	movwf	Uart_Init@vx^0,c
  1306  000D82  0EFF               	movlw	255
  1307  000D84  203F               	addwfc	(?___lldiv+1)^0,w,c
  1308  000D86  6E54               	movwf	(Uart_Init@vx+1)^0,c
  1309  000D88                     
  1310                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 13:     SPBRG = vx 
      +                          & 0x00FF;
  1311  000D88  C053  FFAF         	movff	Uart_Init@vx,4015	;volatile
  1312  000D8C                     
  1313                           ;../../lenguaje_C/ProyectoRobot_PIC18F4550/practicas_USART.X/uart.c: 14:     SPBRGH = vx
      +                           >> 8;
  1314  000D8C  5054               	movf	(Uart_Init@vx+1)^0,w,c
  1315  000D8E  6EB0               	movwf	176,c	;volatile
  1316  000D90  0012               	return		;funcret
  1317  000D92                     __end_of_Uart_Init:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function ___lldiv *****************
  1321 ;; Defined at:
  1322 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  dividend        4    4[COMRAM] unsigned long 
  1325 ;;  divisor         4    8[COMRAM] unsigned long 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  quotient        4   12[COMRAM] unsigned long 
  1328 ;;  counter         1   16[COMRAM] unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  4    4[COMRAM] unsigned long 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1338 ;;      Params:         8       0       0       0       0       0       0       0       0
  1339 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1341 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1342 ;;Total ram usage:       13 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; Hardware stack levels required when called: 3
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_Uart_Init
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text10
  1353  000A7E                     __ptext10:
  1354                           	callstack 0
  1355  000A7E                     ___lldiv:
  1356                           	callstack 26
  1357  000A7E  0E00               	movlw	0
  1358  000A80  6E46               	movwf	___lldiv@quotient^0,c
  1359  000A82  0E00               	movlw	0
  1360  000A84  6E47               	movwf	(___lldiv@quotient+1)^0,c
  1361  000A86  0E00               	movlw	0
  1362  000A88  6E48               	movwf	(___lldiv@quotient+2)^0,c
  1363  000A8A  0E00               	movlw	0
  1364  000A8C  6E49               	movwf	(___lldiv@quotient+3)^0,c
  1365  000A8E  5042               	movf	___lldiv@divisor^0,w,c
  1366  000A90  1043               	iorwf	(___lldiv@divisor+1)^0,w,c
  1367  000A92  1044               	iorwf	(___lldiv@divisor+2)^0,w,c
  1368  000A94  1045               	iorwf	(___lldiv@divisor+3)^0,w,c
  1369  000A96  B4D8               	btfsc	status,2,c
  1370  000A98  EF50  F005         	goto	u481
  1371  000A9C  EF52  F005         	goto	u480
  1372  000AA0                     u481:
  1373  000AA0  EF88  F005         	goto	l452
  1374  000AA4                     u480:
  1375  000AA4  0E01               	movlw	1
  1376  000AA6  6E4A               	movwf	___lldiv@counter^0,c
  1377  000AA8  EF5C  F005         	goto	l1948
  1378  000AAC                     l1946:
  1379  000AAC  90D8               	bcf	status,0,c
  1380  000AAE  3642               	rlcf	___lldiv@divisor^0,f,c
  1381  000AB0  3643               	rlcf	(___lldiv@divisor+1)^0,f,c
  1382  000AB2  3644               	rlcf	(___lldiv@divisor+2)^0,f,c
  1383  000AB4  3645               	rlcf	(___lldiv@divisor+3)^0,f,c
  1384  000AB6  2A4A               	incf	___lldiv@counter^0,f,c
  1385  000AB8                     l1948:
  1386  000AB8  AE45               	btfss	(___lldiv@divisor+3)^0,7,c
  1387  000ABA  EF61  F005         	goto	u491
  1388  000ABE  EF63  F005         	goto	u490
  1389  000AC2                     u491:
  1390  000AC2  EF56  F005         	goto	l1946
  1391  000AC6                     u490:
  1392  000AC6                     l1950:
  1393  000AC6  90D8               	bcf	status,0,c
  1394  000AC8  3646               	rlcf	___lldiv@quotient^0,f,c
  1395  000ACA  3647               	rlcf	(___lldiv@quotient+1)^0,f,c
  1396  000ACC  3648               	rlcf	(___lldiv@quotient+2)^0,f,c
  1397  000ACE  3649               	rlcf	(___lldiv@quotient+3)^0,f,c
  1398  000AD0  5042               	movf	___lldiv@divisor^0,w,c
  1399  000AD2  5C3E               	subwf	___lldiv@dividend^0,w,c
  1400  000AD4  5043               	movf	(___lldiv@divisor+1)^0,w,c
  1401  000AD6  583F               	subwfb	(___lldiv@dividend+1)^0,w,c
  1402  000AD8  5044               	movf	(___lldiv@divisor+2)^0,w,c
  1403  000ADA  5840               	subwfb	(___lldiv@dividend+2)^0,w,c
  1404  000ADC  5045               	movf	(___lldiv@divisor+3)^0,w,c
  1405  000ADE  5841               	subwfb	(___lldiv@dividend+3)^0,w,c
  1406  000AE0  A0D8               	btfss	status,0,c
  1407  000AE2  EF75  F005         	goto	u501
  1408  000AE6  EF77  F005         	goto	u500
  1409  000AEA                     u501:
  1410  000AEA  EF80  F005         	goto	l1958
  1411  000AEE                     u500:
  1412  000AEE  5042               	movf	___lldiv@divisor^0,w,c
  1413  000AF0  5E3E               	subwf	___lldiv@dividend^0,f,c
  1414  000AF2  5043               	movf	(___lldiv@divisor+1)^0,w,c
  1415  000AF4  5A3F               	subwfb	(___lldiv@dividend+1)^0,f,c
  1416  000AF6  5044               	movf	(___lldiv@divisor+2)^0,w,c
  1417  000AF8  5A40               	subwfb	(___lldiv@dividend+2)^0,f,c
  1418  000AFA  5045               	movf	(___lldiv@divisor+3)^0,w,c
  1419  000AFC  5A41               	subwfb	(___lldiv@dividend+3)^0,f,c
  1420  000AFE  8046               	bsf	___lldiv@quotient^0,0,c
  1421  000B00                     l1958:
  1422  000B00  90D8               	bcf	status,0,c
  1423  000B02  3245               	rrcf	(___lldiv@divisor+3)^0,f,c
  1424  000B04  3244               	rrcf	(___lldiv@divisor+2)^0,f,c
  1425  000B06  3243               	rrcf	(___lldiv@divisor+1)^0,f,c
  1426  000B08  3242               	rrcf	___lldiv@divisor^0,f,c
  1427  000B0A  2E4A               	decfsz	___lldiv@counter^0,f,c
  1428  000B0C  EF63  F005         	goto	l1950
  1429  000B10                     l452:
  1430  000B10  C046  F03E         	movff	___lldiv@quotient,?___lldiv
  1431  000B14  C047  F03F         	movff	___lldiv@quotient+1,?___lldiv+1
  1432  000B18  C048  F040         	movff	___lldiv@quotient+2,?___lldiv+2
  1433  000B1C  C049  F041         	movff	___lldiv@quotient+3,?___lldiv+3
  1434  000B20  0012               	return		;funcret
  1435  000B22                     __end_of___lldiv:
  1436                           	callstack 0
  1437                           
  1438 ;; *************** function _LCD_Iniciliza *****************
  1439 ;; Defined at:
  1440 ;;		line 111 in file "Libreria_LCD.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1456 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1457 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1458 ;;Total ram usage:        1 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; Hardware stack levels required when called: 6
  1461 ;; This function calls:
  1462 ;;		_LCD_2Lineas4Bits5x7
  1463 ;;		_LCD_Borra
  1464 ;;		_LCD_CursorIncr
  1465 ;;		_LCD_CursorOFF
  1466 ;;		_LCD_EscribeLCD
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text11
  1473  000C46                     __ptext11:
  1474                           	callstack 0
  1475  000C46                     _LCD_Iniciliza:
  1476                           	callstack 24
  1477  000C46                     
  1478                           ;Libreria_LCD.c: 112:     ADCON1 = 0b00001111;
  1479  000C46  0E0F               	movlw	15
  1480  000C48  6EC1               	movwf	193,c	;volatile
  1481  000C4A                     
  1482                           ;Libreria_LCD.c: 113:     TRISEbits.TRISE0 = 0;
  1483  000C4A  9096               	bcf	150,0,c	;volatile
  1484  000C4C                     
  1485                           ;Libreria_LCD.c: 114:     TRISEbits.TRISE2 = 0;
  1486  000C4C  9496               	bcf	150,2,c	;volatile
  1487  000C4E                     
  1488                           ;Libreria_LCD.c: 115:     TRISEbits.TRISE1 = 0;
  1489  000C4E  9296               	bcf	150,1,c	;volatile
  1490  000C50                     
  1491                           ;Libreria_LCD.c: 117:     PORTEbits.RE1 = 0;
  1492  000C50  9284               	bcf	132,1,c	;volatile
  1493  000C52                     
  1494                           ;Libreria_LCD.c: 118:     PORTEbits.RE2 = 0;
  1495  000C52  9484               	bcf	132,2,c	;volatile
  1496  000C54                     
  1497                           ;Libreria_LCD.c: 119:     PORTEbits.RE0 = 0;
  1498  000C54  9084               	bcf	132,0,c	;volatile
  1499  000C56                     
  1500                           ;Libreria_LCD.c: 121:     _delay((unsigned long)((20)*(20000000UL/4000.0)));
  1501  000C56  0E82               	movlw	130
  1502  000C58  6E43               	movwf	??_LCD_Iniciliza^0,c
  1503  000C5A  0EDE               	movlw	222
  1504  000C5C                     u757:
  1505  000C5C  2EE8               	decfsz	wreg,f,c
  1506  000C5E  D7FE               	bra	u757
  1507  000C60  2E43               	decfsz	??_LCD_Iniciliza^0,f,c
  1508  000C62  D7FC               	bra	u757
  1509  000C64                     
  1510                           ;Libreria_LCD.c: 123:     LCD_EscribeLCD(0b00110000);
  1511  000C64  0E30               	movlw	48
  1512  000C66  EC37  F007         	call	_LCD_EscribeLCD
  1513  000C6A                     
  1514                           ;Libreria_LCD.c: 124:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  1515  000C6A  0E21               	movlw	33
  1516  000C6C  6E43               	movwf	??_LCD_Iniciliza^0,c
  1517  000C6E  0E76               	movlw	118
  1518  000C70                     u767:
  1519  000C70  2EE8               	decfsz	wreg,f,c
  1520  000C72  D7FE               	bra	u767
  1521  000C74  2E43               	decfsz	??_LCD_Iniciliza^0,f,c
  1522  000C76  D7FC               	bra	u767
  1523  000C78  D000               	nop2	
  1524  000C7A                     
  1525                           ;Libreria_LCD.c: 126:     LCD_EscribeLCD(0b00110000);
  1526  000C7A  0E30               	movlw	48
  1527  000C7C  EC37  F007         	call	_LCD_EscribeLCD
  1528  000C80                     
  1529                           ;Libreria_LCD.c: 127:     _delay((unsigned long)((200)*(20000000UL/4000000.0)));
  1530  000C80  0EC8               	movlw	200
  1531  000C82                     u777:
  1532  000C82  D000               	nop2	
  1533  000C84  2EE8               	decfsz	wreg,f,c
  1534  000C86  D7FD               	bra	u777
  1535  000C88                     
  1536                           ;Libreria_LCD.c: 129:     LCD_EscribeLCD(0b00110000);
  1537  000C88  0E30               	movlw	48
  1538  000C8A  EC37  F007         	call	_LCD_EscribeLCD
  1539  000C8E                     
  1540                           ;Libreria_LCD.c: 130:     _delay((unsigned long)((200)*(20000000UL/4000000.0)));
  1541  000C8E  0EC8               	movlw	200
  1542  000C90                     u787:
  1543  000C90  D000               	nop2	
  1544  000C92  2EE8               	decfsz	wreg,f,c
  1545  000C94  D7FD               	bra	u787
  1546  000C96                     
  1547                           ;Libreria_LCD.c: 132:     LCD_EscribeLCD(0b00100000);
  1548  000C96  0E20               	movlw	32
  1549  000C98  EC37  F007         	call	_LCD_EscribeLCD
  1550  000C9C                     
  1551                           ;Libreria_LCD.c: 133:     _delay((unsigned long)((200)*(20000000UL/4000000.0)));
  1552  000C9C  0EC8               	movlw	200
  1553  000C9E                     u797:
  1554  000C9E  D000               	nop2	
  1555  000CA0  2EE8               	decfsz	wreg,f,c
  1556  000CA2  D7FD               	bra	u797
  1557  000CA4                     
  1558                           ;Libreria_LCD.c: 135:     LCD_2Lineas4Bits5x7();
  1559  000CA4  ECAE  F007         	call	_LCD_2Lineas4Bits5x7	;wreg free
  1560  000CA8                     
  1561                           ;Libreria_LCD.c: 136:     LCD_Borra();
  1562  000CA8  ECAA  F007         	call	_LCD_Borra	;wreg free
  1563  000CAC                     
  1564                           ;Libreria_LCD.c: 137:     LCD_CursorOFF();
  1565  000CAC  ECA2  F007         	call	_LCD_CursorOFF	;wreg free
  1566  000CB0                     
  1567                           ;Libreria_LCD.c: 138:     LCD_CursorIncr();
  1568  000CB0  ECA6  F007         	call	_LCD_CursorIncr	;wreg free
  1569  000CB4  0012               	return		;funcret
  1570  000CB6                     __end_of_LCD_Iniciliza:
  1571                           	callstack 0
  1572                           
  1573 ;; *************** function _LCD_CursorOFF *****************
  1574 ;; Defined at:
  1575 ;;		line 99 in file "Libreria_LCD.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1592 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; Hardware stack levels required when called: 5
  1596 ;; This function calls:
  1597 ;;		_LCD_EnviaComando
  1598 ;; This function is called by:
  1599 ;;		_LCD_Iniciliza
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text12
  1604  000F44                     __ptext12:
  1605                           	callstack 0
  1606  000F44                     _LCD_CursorOFF:
  1607                           	callstack 24
  1608  000F44                     
  1609                           ;Libreria_LCD.c: 100:     LCD_EnviaComando(0b00001100);
  1610  000F44  0E0C               	movlw	12
  1611  000F46  EC91  F005         	call	_LCD_EnviaComando
  1612  000F4A  0012               	return		;funcret
  1613  000F4C                     __end_of_LCD_CursorOFF:
  1614                           	callstack 0
  1615                           
  1616 ;; *************** function _LCD_CursorIncr *****************
  1617 ;; Defined at:
  1618 ;;		line 63 in file "Libreria_LCD.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1632 ;;      Params:         0       0       0       0       0       0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1635 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1636 ;;Total ram usage:        0 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 5
  1639 ;; This function calls:
  1640 ;;		_LCD_EnviaComando
  1641 ;; This function is called by:
  1642 ;;		_LCD_Iniciliza
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text13
  1647  000F4C                     __ptext13:
  1648                           	callstack 0
  1649  000F4C                     _LCD_CursorIncr:
  1650                           	callstack 24
  1651  000F4C                     
  1652                           ;Libreria_LCD.c: 64:     LCD_EnviaComando(0b00000110);
  1653  000F4C  0E06               	movlw	6
  1654  000F4E  EC91  F005         	call	_LCD_EnviaComando
  1655  000F52  0012               	return		;funcret
  1656  000F54                     __end_of_LCD_CursorIncr:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _LCD_Borra *****************
  1660 ;; Defined at:
  1661 ;;		line 103 in file "Libreria_LCD.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, status,2, status,0, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1675 ;;      Params:         0       0       0       0       0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1678 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1679 ;;Total ram usage:        0 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 5
  1682 ;; This function calls:
  1683 ;;		_LCD_EnviaComando
  1684 ;; This function is called by:
  1685 ;;		_LCD_Iniciliza
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text14
  1690  000F54                     __ptext14:
  1691                           	callstack 0
  1692  000F54                     _LCD_Borra:
  1693                           	callstack 24
  1694  000F54                     
  1695                           ;Libreria_LCD.c: 104:     LCD_EnviaComando(0b00000001);
  1696  000F54  0E01               	movlw	1
  1697  000F56  EC91  F005         	call	_LCD_EnviaComando
  1698  000F5A  0012               	return		;funcret
  1699  000F5C                     __end_of_LCD_Borra:
  1700                           	callstack 0
  1701                           
  1702 ;; *************** function _LCD_2Lineas4Bits5x7 *****************
  1703 ;; Defined at:
  1704 ;;		line 107 in file "Libreria_LCD.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         0       0       0       0       0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1721 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 5
  1725 ;; This function calls:
  1726 ;;		_LCD_EnviaComando
  1727 ;; This function is called by:
  1728 ;;		_LCD_Iniciliza
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text15
  1733  000F5C                     __ptext15:
  1734                           	callstack 0
  1735  000F5C                     _LCD_2Lineas4Bits5x7:
  1736                           	callstack 24
  1737  000F5C                     
  1738                           ;Libreria_LCD.c: 108:     LCD_EnviaComando(0b00101000);
  1739  000F5C  0E28               	movlw	40
  1740  000F5E  EC91  F005         	call	_LCD_EnviaComando
  1741  000F62  0012               	return		;funcret
  1742  000F64                     __end_of_LCD_2Lineas4Bits5x7:
  1743                           	callstack 0
  1744                           
  1745 ;; *************** function _LCD_EnviaComando *****************
  1746 ;; Defined at:
  1747 ;;		line 22 in file "Libreria_LCD.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  comandos        1    wreg     unsigned char 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  comandos        1    8[COMRAM] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1761 ;;      Params:         0       0       0       0       0       0       0       0       0
  1762 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1763 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1764 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1765 ;;Total ram usage:        4 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 4
  1768 ;; This function calls:
  1769 ;;		_LCD_EscribeLCD
  1770 ;; This function is called by:
  1771 ;;		_LCD_CursorIncr
  1772 ;;		_LCD_CursorOFF
  1773 ;;		_LCD_Borra
  1774 ;;		_LCD_2Lineas4Bits5x7
  1775 ;;		_LCD_Linea1
  1776 ;;		_LCD_Linea2
  1777 ;;		_LCD_Linea3
  1778 ;;		_LCD_Linea4
  1779 ;;		_LCD_PosicionLinea1
  1780 ;;		_LCD_PosicionLinea2
  1781 ;;		_LCD_OFF
  1782 ;;		_LCD_CursorON
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text16
  1787  000B22                     __ptext16:
  1788                           	callstack 0
  1789  000B22                     _LCD_EnviaComando:
  1790                           	callstack 24
  1791                           
  1792                           ;incstack = 0
  1793                           ;LCD_EnviaComando@comandos stored from wreg
  1794  000B22  6E42               	movwf	LCD_EnviaComando@comandos^0,c
  1795  000B24                     
  1796                           ;Libreria_LCD.c: 23:     PORTEbits.RE0 = 0;
  1797  000B24  9084               	bcf	132,0,c	;volatile
  1798  000B26                     
  1799                           ;Libreria_LCD.c: 25:     LCD_GuardaDato = comandos;
  1800  000B26  C042  F02A         	movff	LCD_EnviaComando@comandos,_LCD_GuardaDato
  1801  000B2A                     
  1802                           ;Libreria_LCD.c: 26:     LCD_EscribeLCD(comandos);
  1803  000B2A  5042               	movf	LCD_EnviaComando@comandos^0,w,c
  1804  000B2C  EC37  F007         	call	_LCD_EscribeLCD
  1805  000B30                     
  1806                           ;Libreria_LCD.c: 28:     num1 = comandos & 0x0F;
  1807  000B30  C042  F03F         	movff	LCD_EnviaComando@comandos,??_LCD_EnviaComando
  1808  000B34  0E0F               	movlw	15
  1809  000B36  163F               	andwf	??_LCD_EnviaComando^0,f,c
  1810  000B38  503F               	movf	??_LCD_EnviaComando^0,w,c
  1811  000B3A  6E17               	movwf	_num1^0,c
  1812  000B3C  6A18               	clrf	(_num1+1)^0,c
  1813  000B3E                     
  1814                           ;Libreria_LCD.c: 29:     num2 = comandos & 0xF0;
  1815  000B3E  C042  F03F         	movff	LCD_EnviaComando@comandos,??_LCD_EnviaComando
  1816  000B42  0EF0               	movlw	240
  1817  000B44  163F               	andwf	??_LCD_EnviaComando^0,f,c
  1818  000B46  503F               	movf	??_LCD_EnviaComando^0,w,c
  1819  000B48  6E15               	movwf	_num2^0,c
  1820  000B4A  6A16               	clrf	(_num2+1)^0,c
  1821  000B4C                     
  1822                           ;Libreria_LCD.c: 30:     num1 = num1 << 4;
  1823  000B4C  C017  F03F         	movff	_num1,??_LCD_EnviaComando
  1824  000B50  C018  F040         	movff	_num1+1,??_LCD_EnviaComando+1
  1825  000B54  3A3F               	swapf	??_LCD_EnviaComando^0,f,c
  1826  000B56  3A40               	swapf	(??_LCD_EnviaComando+1)^0,f,c
  1827  000B58  0EF0               	movlw	240
  1828  000B5A  1640               	andwf	(??_LCD_EnviaComando+1)^0,f,c
  1829  000B5C  503F               	movf	??_LCD_EnviaComando^0,w,c
  1830  000B5E  0B0F               	andlw	15
  1831  000B60  1240               	iorwf	(??_LCD_EnviaComando+1)^0,f,c
  1832  000B62  0EF0               	movlw	240
  1833  000B64  163F               	andwf	??_LCD_EnviaComando^0,f,c
  1834  000B66  C03F  F017         	movff	??_LCD_EnviaComando,_num1
  1835  000B6A  C040  F018         	movff	??_LCD_EnviaComando+1,_num1+1
  1836  000B6E                     
  1837                           ;Libreria_LCD.c: 31:     num2 = num2 >> 4;
  1838  000B6E  C015  F03F         	movff	_num2,??_LCD_EnviaComando
  1839  000B72  C016  F040         	movff	_num2+1,??_LCD_EnviaComando+1
  1840  000B76  0E04               	movlw	4
  1841  000B78  6E41               	movwf	(??_LCD_EnviaComando+2)^0,c
  1842  000B7A                     u15:
  1843  000B7A  3440               	rlcf	(??_LCD_EnviaComando+1)^0,w,c
  1844  000B7C  3240               	rrcf	(??_LCD_EnviaComando+1)^0,f,c
  1845  000B7E  323F               	rrcf	??_LCD_EnviaComando^0,f,c
  1846  000B80  2E41               	decfsz	(??_LCD_EnviaComando+2)^0,f,c
  1847  000B82  EFBD  F005         	goto	u15
  1848  000B86  C03F  F015         	movff	??_LCD_EnviaComando,_num2
  1849  000B8A  C040  F016         	movff	??_LCD_EnviaComando+1,_num2+1
  1850  000B8E                     
  1851                           ;Libreria_LCD.c: 32:     LCD_GuardaDatoAux = num1 ^ num2;
  1852  000B8E  5017               	movf	_num1^0,w,c
  1853  000B90  1815               	xorwf	_num2^0,w,c
  1854  000B92  6E29               	movwf	_LCD_GuardaDatoAux^0,c
  1855  000B94                     
  1856                           ;Libreria_LCD.c: 33:     LCD_EscribeLCD(LCD_GuardaDatoAux );
  1857  000B94  5029               	movf	_LCD_GuardaDatoAux^0,w,c
  1858  000B96  EC37  F007         	call	_LCD_EscribeLCD
  1859  000B9A                     
  1860                           ;Libreria_LCD.c: 35:     if(PORTEbits.RE0 == 1){
  1861  000B9A  A084               	btfss	132,0,c	;volatile
  1862  000B9C  EFD2  F005         	goto	u21
  1863  000BA0  EFD4  F005         	goto	u20
  1864  000BA4                     u21:
  1865  000BA4  EFDA  F005         	goto	l1132
  1866  000BA8                     u20:
  1867  000BA8                     
  1868                           ;Libreria_LCD.c: 36:         _delay((unsigned long)((200)*(20000000UL/4000000.0)));
  1869  000BA8  0EC8               	movlw	200
  1870  000BAA                     u807:
  1871  000BAA  D000               	nop2	
  1872  000BAC  2EE8               	decfsz	wreg,f,c
  1873  000BAE  D7FD               	bra	u807
  1874                           
  1875                           ;Libreria_LCD.c: 38:     }else{
  1876  000BB0  EFE2  F005         	goto	l310
  1877  000BB4                     l1132:
  1878                           
  1879                           ;Libreria_LCD.c: 39:         _delay((unsigned long)((5)*(20000000UL/4000.0)));
  1880  000BB4  0E21               	movlw	33
  1881  000BB6  6E3F               	movwf	??_LCD_EnviaComando^0,c
  1882  000BB8  0E76               	movlw	118
  1883  000BBA                     u817:
  1884  000BBA  2EE8               	decfsz	wreg,f,c
  1885  000BBC  D7FE               	bra	u817
  1886  000BBE  2E3F               	decfsz	??_LCD_EnviaComando^0,f,c
  1887  000BC0  D7FC               	bra	u817
  1888  000BC2  D000               	nop2	
  1889  000BC4                     l310:
  1890  000BC4  0012               	return		;funcret
  1891  000BC6                     __end_of_LCD_EnviaComando:
  1892                           	callstack 0
  1893                           
  1894 ;; *************** function _LCD_EscribeLCD *****************
  1895 ;; Defined at:
  1896 ;;		line 5 in file "Libreria_LCD.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  comando         1    wreg     unsigned char 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  comando         1    4[COMRAM] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1910 ;;      Params:         0       0       0       0       0       0       0       0       0
  1911 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1913 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1914 ;;Total ram usage:        1 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; Hardware stack levels required when called: 3
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_LCD_EnviaComando
  1921 ;;		_LCD_Caracter
  1922 ;;		_LCD_Iniciliza
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text17
  1927  000E6E                     __ptext17:
  1928                           	callstack 0
  1929  000E6E                     _LCD_EscribeLCD:
  1930                           	callstack 25
  1931                           
  1932                           ;incstack = 0
  1933                           ;LCD_EscribeLCD@comando stored from wreg
  1934  000E6E  6E3E               	movwf	LCD_EscribeLCD@comando^0,c
  1935  000E70                     
  1936                           ;Libreria_LCD.c: 6:     lcd_dato = comando & 0xF0;
  1937  000E70  503E               	movf	LCD_EscribeLCD@comando^0,w,c
  1938  000E72  0BF0               	andlw	240
  1939  000E74  6E2D               	movwf	_lcd_dato^0,c
  1940                           
  1941                           ;Libreria_LCD.c: 7:     aux_port = PORTD & 0x0F;
  1942  000E76  5083               	movf	131,w,c	;volatile
  1943  000E78  0B0F               	andlw	15
  1944  000E7A  6E2C               	movwf	_aux_port^0,c
  1945                           
  1946                           ;Libreria_LCD.c: 8:     lcd_dato = aux_port ^ lcd_dato;
  1947  000E7C  502C               	movf	_aux_port^0,w,c
  1948  000E7E  182D               	xorwf	_lcd_dato^0,w,c
  1949  000E80  6E2D               	movwf	_lcd_dato^0,c
  1950  000E82                     
  1951                           ;Libreria_LCD.c: 10:     LCD_GuardaTRISD = TRISD;
  1952  000E82  CF95 F02B          	movff	3989,_LCD_GuardaTRISD	;volatile
  1953                           
  1954                           ;Libreria_LCD.c: 11:     TRISD = TRISD & 0x0F;
  1955  000E86  5095               	movf	149,w,c	;volatile
  1956  000E88  0B0F               	andlw	15
  1957  000E8A  6E95               	movwf	149,c	;volatile
  1958  000E8C                     
  1959                           ;Libreria_LCD.c: 14:     PORTD = lcd_dato;
  1960  000E8C  C02D  FF83         	movff	_lcd_dato,3971	;volatile
  1961  000E90                     
  1962                           ;Libreria_LCD.c: 16:     PORTEbits.RE2 = 1;
  1963  000E90  8484               	bsf	132,2,c	;volatile
  1964  000E92                     
  1965                           ;Libreria_LCD.c: 17:     PORTEbits.RE2 = 0;
  1966  000E92  9484               	bcf	132,2,c	;volatile
  1967  000E94                     
  1968                           ;Libreria_LCD.c: 19:     TRISD = LCD_GuardaTRISD;
  1969  000E94  C02B  FF95         	movff	_LCD_GuardaTRISD,3989	;volatile
  1970  000E98  0012               	return		;funcret
  1971  000E9A                     __end_of_LCD_EscribeLCD:
  1972                           	callstack 0
  1973                           
  1974 ;; *************** function _Interrupcion_TMR0 *****************
  1975 ;; Defined at:
  1976 ;;		line 160 in file "main.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used: 1
  1996 ;; Hardware stack levels required when called: 2
  1997 ;; This function calls:
  1998 ;;		_Temporizaciones
  1999 ;; This function is called by:
  2000 ;;		Interrupt level 2
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	intcode
  2005  000008                     __pintcode:
  2006                           	callstack 0
  2007  000008                     _Interrupcion_TMR0:
  2008                           	callstack 24
  2009                           
  2010                           ;incstack = 0
  2011  000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2012  00000A  ED08  F004         	call	int_func,f	;refresh shadow registers
  2013                           
  2014                           	psect	intcode_body
  2015  000810                     __pintcode_body:
  2016                           	callstack 24
  2017  000810                     int_func:
  2018                           	callstack 24
  2019  000810  0006               	pop		; remove dummy address from shadow register refresh
  2020  000812                     
  2021                           ;main.c: 161:     TMR0 = 59286;
  2022  000812  0EE7               	movlw	231
  2023  000814  6ED7               	movwf	215,c	;volatile
  2024  000816  0E96               	movlw	150
  2025  000818  6ED6               	movwf	214,c	;volatile
  2026  00081A                     
  2027                           ;main.c: 163:     if(INTCONbits.TMR0IF == 1){
  2028  00081A  A4F2               	btfss	242,2,c	;volatile
  2029  00081C  EF12  F004         	goto	i2u58_41
  2030  000820  EF14  F004         	goto	i2u58_40
  2031  000824                     i2u58_41:
  2032  000824  EF8A  F004         	goto	i2l191
  2033  000828                     i2u58_40:
  2034  000828                     
  2035                           ;main.c: 164:         contador_servos++;
  2036  000828  2A28               	incf	_contador_servos^0,f,c
  2037  00082A                     
  2038                           ;main.c: 165:         if(contador_servos == 1 && bandera_servo[1] == 1){
  2039  00082A  0428               	decf	_contador_servos^0,w,c
  2040  00082C  A4D8               	btfss	status,2,c
  2041  00082E  EF1B  F004         	goto	i2u59_41
  2042  000832  EF1D  F004         	goto	i2u59_40
  2043  000836                     i2u59_41:
  2044  000836  EF2E  F004         	goto	i2l2076
  2045  00083A                     i2u59_40:
  2046  00083A  040A               	decf	(_bandera_servo+1)^0,w,c
  2047  00083C  A4D8               	btfss	status,2,c
  2048  00083E  EF23  F004         	goto	i2u60_41
  2049  000842  EF25  F004         	goto	i2u60_40
  2050  000846                     i2u60_41:
  2051  000846  EF2E  F004         	goto	i2l2076
  2052  00084A                     i2u60_40:
  2053  00084A                     
  2054                           ;main.c: 166:             LATBbits.LB4 = 1;
  2055  00084A  888A               	bsf	138,4,c	;volatile
  2056  00084C                     
  2057                           ;main.c: 167:             Temporizaciones(servo_1, pos_servo1);
  2058  00084C  C031  F03A         	movff	_pos_servo1,Temporizaciones@pos_servo
  2059  000850  5039               	movf	_servo_1^0,w,c
  2060  000852  ECE3  F005         	call	_Temporizaciones
  2061  000856                     
  2062                           ;main.c: 168:             LATBbits.LB4 = 0;
  2063  000856  988A               	bcf	138,4,c	;volatile
  2064                           
  2065                           ;main.c: 169:         }else if(contador_servos == 2 && bandera_servo[2] == 1){
  2066  000858  EF89  F004         	goto	i2l2110
  2067  00085C                     i2l2076:
  2068  00085C  0E02               	movlw	2
  2069  00085E  1828               	xorwf	_contador_servos^0,w,c
  2070  000860  A4D8               	btfss	status,2,c
  2071  000862  EF35  F004         	goto	i2u61_41
  2072  000866  EF37  F004         	goto	i2u61_40
  2073  00086A                     i2u61_41:
  2074  00086A  EF48  F004         	goto	i2l2086
  2075  00086E                     i2u61_40:
  2076  00086E  040B               	decf	(_bandera_servo+2)^0,w,c
  2077  000870  A4D8               	btfss	status,2,c
  2078  000872  EF3D  F004         	goto	i2u62_41
  2079  000876  EF3F  F004         	goto	i2u62_40
  2080  00087A                     i2u62_41:
  2081  00087A  EF48  F004         	goto	i2l2086
  2082  00087E                     i2u62_40:
  2083  00087E                     
  2084                           ;main.c: 170:             LATBbits.LB5 = 1;
  2085  00087E  8A8A               	bsf	138,5,c	;volatile
  2086  000880                     
  2087                           ;main.c: 171:             Temporizaciones(servo_2, pos_servo2);
  2088  000880  C030  F03A         	movff	_pos_servo2,Temporizaciones@pos_servo
  2089  000884  5038               	movf	_servo_2^0,w,c
  2090  000886  ECE3  F005         	call	_Temporizaciones
  2091  00088A                     
  2092                           ;main.c: 172:             LATBbits.LB5 = 0;
  2093  00088A  9A8A               	bcf	138,5,c	;volatile
  2094                           
  2095                           ;main.c: 173:         }else if(contador_servos == 3 && bandera_servo[3] == 1){
  2096  00088C  EF89  F004         	goto	i2l2110
  2097  000890                     i2l2086:
  2098  000890  0E03               	movlw	3
  2099  000892  1828               	xorwf	_contador_servos^0,w,c
  2100  000894  A4D8               	btfss	status,2,c
  2101  000896  EF4F  F004         	goto	i2u63_41
  2102  00089A  EF51  F004         	goto	i2u63_40
  2103  00089E                     i2u63_41:
  2104  00089E  EF62  F004         	goto	i2l2096
  2105  0008A2                     i2u63_40:
  2106  0008A2  040C               	decf	(_bandera_servo+3)^0,w,c
  2107  0008A4  A4D8               	btfss	status,2,c
  2108  0008A6  EF57  F004         	goto	i2u64_41
  2109  0008AA  EF59  F004         	goto	i2u64_40
  2110  0008AE                     i2u64_41:
  2111  0008AE  EF62  F004         	goto	i2l2096
  2112  0008B2                     i2u64_40:
  2113  0008B2                     
  2114                           ;main.c: 174:             LATBbits.LB6 = 1;
  2115  0008B2  8C8A               	bsf	138,6,c	;volatile
  2116  0008B4                     
  2117                           ;main.c: 175:             Temporizaciones(servo_3, pos_servo3);
  2118  0008B4  C02F  F03A         	movff	_pos_servo3,Temporizaciones@pos_servo
  2119  0008B8  5037               	movf	_servo_3^0,w,c
  2120  0008BA  ECE3  F005         	call	_Temporizaciones
  2121  0008BE                     
  2122                           ;main.c: 176:             LATBbits.LB6 = 0;
  2123  0008BE  9C8A               	bcf	138,6,c	;volatile
  2124                           
  2125                           ;main.c: 177:         }else if(contador_servos == 4 && bandera_servo[4] == 1){
  2126  0008C0  EF89  F004         	goto	i2l2110
  2127  0008C4                     i2l2096:
  2128  0008C4  0E04               	movlw	4
  2129  0008C6  1828               	xorwf	_contador_servos^0,w,c
  2130  0008C8  A4D8               	btfss	status,2,c
  2131  0008CA  EF69  F004         	goto	i2u65_41
  2132  0008CE  EF6B  F004         	goto	i2u65_40
  2133  0008D2                     i2u65_41:
  2134  0008D2  EF7C  F004         	goto	i2l2106
  2135  0008D6                     i2u65_40:
  2136  0008D6  040D               	decf	(_bandera_servo+4)^0,w,c
  2137  0008D8  A4D8               	btfss	status,2,c
  2138  0008DA  EF71  F004         	goto	i2u66_41
  2139  0008DE  EF73  F004         	goto	i2u66_40
  2140  0008E2                     i2u66_41:
  2141  0008E2  EF7C  F004         	goto	i2l2106
  2142  0008E6                     i2u66_40:
  2143  0008E6                     
  2144                           ;main.c: 178:             LATBbits.LB7 = 1;
  2145  0008E6  8E8A               	bsf	138,7,c	;volatile
  2146  0008E8                     
  2147                           ;main.c: 179:             Temporizaciones(servo_4, pos_servo4);
  2148  0008E8  C02E  F03A         	movff	_pos_servo4,Temporizaciones@pos_servo
  2149  0008EC  5036               	movf	_servo_4^0,w,c
  2150  0008EE  ECE3  F005         	call	_Temporizaciones
  2151  0008F2                     
  2152                           ;main.c: 180:             LATBbits.LB7 = 0;
  2153  0008F2  9E8A               	bcf	138,7,c	;volatile
  2154                           
  2155                           ;main.c: 181:         }else if(contador_servos == 8){
  2156  0008F4  EF89  F004         	goto	i2l2110
  2157  0008F8                     i2l2106:
  2158  0008F8  0E08               	movlw	8
  2159  0008FA  1828               	xorwf	_contador_servos^0,w,c
  2160  0008FC  A4D8               	btfss	status,2,c
  2161  0008FE  EF83  F004         	goto	i2u67_41
  2162  000902  EF85  F004         	goto	i2u67_40
  2163  000906                     i2u67_41:
  2164  000906  EF89  F004         	goto	i2l185
  2165  00090A                     i2u67_40:
  2166  00090A                     
  2167                           ;main.c: 182:             contador_servos = 0;
  2168  00090A  0E00               	movlw	0
  2169  00090C  6E28               	movwf	_contador_servos^0,c
  2170  00090E  EF89  F004         	goto	i2l2110
  2171  000912                     i2l185:
  2172  000912                     i2l2110:
  2173                           
  2174                           ;main.c: 184:         INTCONbits.TMR0IF = 0;
  2175  000912  94F2               	bcf	242,2,c	;volatile
  2176  000914                     i2l191:
  2177  000914  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2178  000916  0011               	retfie		f
  2179  000918                     __end_of_Interrupcion_TMR0:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _Temporizaciones *****************
  2183 ;; Defined at:
  2184 ;;		line 134 in file "main.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  contador        1    wreg     unsigned char 
  2187 ;;  pos_servo       1    0[COMRAM] unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  contador        1    3[COMRAM] unsigned char 
  2190 ;;  i               1    2[COMRAM] unsigned char 
  2191 ;;  i               1    1[COMRAM] unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2201 ;;      Params:         1       0       0       0       0       0       0       0       0
  2202 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2204 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2205 ;;Total ram usage:        4 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 1
  2208 ;; This function calls:
  2209 ;;		_Tim_2us
  2210 ;;		_Tim_50us
  2211 ;; This function is called by:
  2212 ;;		_Interrupcion_TMR0
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text19
  2217  000BC6                     __ptext19:
  2218                           	callstack 0
  2219  000BC6                     _Temporizaciones:
  2220                           	callstack 24
  2221                           
  2222                           ;incstack = 0
  2223                           ;Temporizaciones@contador stored from wreg
  2224  000BC6  6E3D               	movwf	Temporizaciones@contador^0,c
  2225  000BC8                     
  2226                           ;main.c: 135:     if(contador >= pos_servo){
  2227  000BC8  503A               	movf	Temporizaciones@pos_servo^0,w,c
  2228  000BCA  5C3D               	subwf	Temporizaciones@contador^0,w,c
  2229  000BCC  A0D8               	btfss	status,0,c
  2230  000BCE  EFEB  F005         	goto	i2u53_41
  2231  000BD2  EFED  F005         	goto	i2u53_40
  2232  000BD6                     i2u53_41:
  2233  000BD6  EF04  F006         	goto	i2l2012
  2234  000BDA                     i2u53_40:
  2235  000BDA                     
  2236                           ;main.c: 136:         contador = contador - pos_servo;
  2237  000BDA  503A               	movf	Temporizaciones@pos_servo^0,w,c
  2238  000BDC  5C3D               	subwf	Temporizaciones@contador^0,w,c
  2239  000BDE  6E3D               	movwf	Temporizaciones@contador^0,c
  2240  000BE0                     
  2241                           ;main.c: 138:         Tim_50us();
  2242  000BE0  EC4D  F007         	call	_Tim_50us	;wreg free
  2243  000BE4                     
  2244                           ;main.c: 139:         for(char i = 0; i <= contador; i++){
  2245  000BE4  0E00               	movlw	0
  2246  000BE6  6E3B               	movwf	Temporizaciones@i^0,c
  2247  000BE8  EFF9  F005         	goto	i2l2010
  2248  000BEC                     i2l2006:
  2249                           
  2250                           ;main.c: 140:             Tim_2us();
  2251  000BEC  EC5F  F007         	call	_Tim_2us	;wreg free
  2252  000BF0                     
  2253                           ;main.c: 141:         }
  2254  000BF0  2A3B               	incf	Temporizaciones@i^0,f,c
  2255  000BF2                     i2l2010:
  2256  000BF2  503B               	movf	Temporizaciones@i^0,w,c
  2257  000BF4  5C3D               	subwf	Temporizaciones@contador^0,w,c
  2258  000BF6  B0D8               	btfsc	status,0,c
  2259  000BF8  EF00  F006         	goto	i2u54_41
  2260  000BFC  EF02  F006         	goto	i2u54_40
  2261  000C00                     i2u54_41:
  2262  000C00  EFF6  F005         	goto	i2l2006
  2263  000C04                     i2u54_40:
  2264  000C04  EF22  F006         	goto	i2l176
  2265  000C08                     i2l2012:
  2266  000C08  503A               	movf	Temporizaciones@pos_servo^0,w,c
  2267  000C0A  5C3D               	subwf	Temporizaciones@contador^0,w,c
  2268  000C0C  B0D8               	btfsc	status,0,c
  2269  000C0E  EF0B  F006         	goto	i2u55_41
  2270  000C12  EF0D  F006         	goto	i2u55_40
  2271  000C16                     i2u55_41:
  2272  000C16  EF22  F006         	goto	i2l176
  2273  000C1A                     i2u55_40:
  2274  000C1A                     
  2275                           ;main.c: 143:         contador = pos_servo - contador;
  2276  000C1A  503D               	movf	Temporizaciones@contador^0,w,c
  2277  000C1C  5C3A               	subwf	Temporizaciones@pos_servo^0,w,c
  2278  000C1E  6E3D               	movwf	Temporizaciones@contador^0,c
  2279  000C20                     
  2280                           ;main.c: 145:         Tim_50us();
  2281  000C20  EC4D  F007         	call	_Tim_50us	;wreg free
  2282  000C24                     
  2283                           ;main.c: 146:         for(char i = 0; i > contador; i--){
  2284  000C24  0E00               	movlw	0
  2285  000C26  6E3C               	movwf	Temporizaciones@i_504^0,c
  2286  000C28  EF19  F006         	goto	i2l2026
  2287  000C2C                     i2l2022:
  2288                           
  2289                           ;main.c: 147:             Tim_2us();
  2290  000C2C  EC5F  F007         	call	_Tim_2us	;wreg free
  2291  000C30                     
  2292                           ;main.c: 148:         }
  2293  000C30  063C               	decf	Temporizaciones@i_504^0,f,c
  2294  000C32                     i2l2026:
  2295  000C32  503C               	movf	Temporizaciones@i_504^0,w,c
  2296  000C34  5C3D               	subwf	Temporizaciones@contador^0,w,c
  2297  000C36  A0D8               	btfss	status,0,c
  2298  000C38  EF20  F006         	goto	i2u56_41
  2299  000C3C  EF22  F006         	goto	i2u56_40
  2300  000C40                     i2u56_41:
  2301  000C40  EF16  F006         	goto	i2l2022
  2302  000C44                     i2u56_40:
  2303  000C44                     i2l176:
  2304  000C44  0012               	return		;funcret
  2305  000C46                     __end_of_Temporizaciones:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function _Tim_50us *****************
  2309 ;; Defined at:
  2310 ;;		line 108 in file "main.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2324 ;;      Params:         0       0       0       0       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_Temporizaciones
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text20
  2338  000E9A                     __ptext20:
  2339                           	callstack 0
  2340  000E9A                     _Tim_50us:
  2341                           	callstack 24
  2342  000E9A                     
  2343                           ;main.c: 109:     T1CON = 0b11001000;
  2344  000E9A  0EC8               	movlw	200
  2345  000E9C  6ECD               	movwf	205,c	;volatile
  2346                           
  2347                           ;main.c: 110:     TMR1 = 63036;
  2348  000E9E  0EF6               	movlw	246
  2349  000EA0  6ECF               	movwf	207,c	;volatile
  2350  000EA2  0E3C               	movlw	60
  2351  000EA4  6ECE               	movwf	206,c	;volatile
  2352  000EA6                     
  2353                           ;main.c: 111:     T1CONbits.TMR1ON = 1;
  2354  000EA6  80CD               	bsf	205,0,c	;volatile
  2355  000EA8                     
  2356                           ;main.c: 112:     PIR1bits.TMR1IF = 0;
  2357  000EA8  909E               	bcf	158,0,c	;volatile
  2358  000EAA                     i2l155:
  2359  000EAA  A09E               	btfss	158,0,c	;volatile
  2360  000EAC  EF5A  F007         	goto	i2u6_41
  2361  000EB0  EF5C  F007         	goto	i2u6_40
  2362  000EB4                     i2u6_41:
  2363  000EB4  EF55  F007         	goto	i2l155
  2364  000EB8                     i2u6_40:
  2365  000EB8                     
  2366                           ;main.c: 114:     PIR1bits.TMR1IF = 0;
  2367  000EB8  909E               	bcf	158,0,c	;volatile
  2368                           
  2369                           ;main.c: 115:     T1CONbits.TMR1ON = 0;
  2370  000EBA  90CD               	bcf	205,0,c	;volatile
  2371  000EBC  0012               	return		;funcret
  2372  000EBE                     __end_of_Tim_50us:
  2373                           	callstack 0
  2374                           
  2375 ;; *************** function _Tim_2us *****************
  2376 ;; Defined at:
  2377 ;;		line 123 in file "main.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2391 ;;      Params:         0       0       0       0       0       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2394 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2395 ;;Total ram usage:        0 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_Temporizaciones
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text21
  2405  000EBE                     __ptext21:
  2406                           	callstack 0
  2407  000EBE                     _Tim_2us:
  2408                           	callstack 24
  2409  000EBE                     
  2410                           ;main.c: 124:     T1CON = 0b11001000;
  2411  000EBE  0EC8               	movlw	200
  2412  000EC0  6ECD               	movwf	205,c	;volatile
  2413                           
  2414                           ;main.c: 125:     TMR1 = 65430;
  2415  000EC2  0EFF               	movlw	255
  2416  000EC4  6ECF               	movwf	207,c	;volatile
  2417  000EC6  0E96               	movlw	150
  2418  000EC8  6ECE               	movwf	206,c	;volatile
  2419  000ECA                     
  2420                           ;main.c: 126:     T1CONbits.TMR1ON = 1;
  2421  000ECA  80CD               	bsf	205,0,c	;volatile
  2422  000ECC                     
  2423                           ;main.c: 127:     PIR1bits.TMR1IF = 0;
  2424  000ECC  909E               	bcf	158,0,c	;volatile
  2425  000ECE                     i2l161:
  2426  000ECE  A09E               	btfss	158,0,c	;volatile
  2427  000ED0  EF6C  F007         	goto	i2u7_41
  2428  000ED4  EF6E  F007         	goto	i2u7_40
  2429  000ED8                     i2u7_41:
  2430  000ED8  EF67  F007         	goto	i2l161
  2431  000EDC                     i2u7_40:
  2432  000EDC                     
  2433                           ;main.c: 129:     PIR1bits.TMR1IF = 0;
  2434  000EDC  909E               	bcf	158,0,c	;volatile
  2435                           
  2436                           ;main.c: 130:     T1CONbits.TMR1ON = 0;
  2437  000EDE  90CD               	bcf	205,0,c	;volatile
  2438  000EE0  0012               	return		;funcret
  2439  000EE2                     __end_of_Tim_2us:
  2440                           	callstack 0
  2441                           
  2442                           	psect	rparam
  2443  0000                     
  2444                           	psect	temp
  2445  000055                     btemp:
  2446                           	callstack 0
  2447  000055                     	ds	1
  2448  0000                     int$flags	set	btemp
  2449  0000                     wtemp8	set	btemp+1
  2450  0000                     ttemp5	set	btemp+1
  2451  0000                     ttemp6	set	btemp+4
  2452  0000                     ttemp7	set	btemp+8
  2453                           
  2454                           	psect	idloc
  2455                           
  2456                           ;Config register IDLOC0 @ 0x200000
  2457                           ;	unspecified, using default values
  2458  200000                     	org	2097152
  2459  200000  FF                 	db	255
  2460                           
  2461                           ;Config register IDLOC1 @ 0x200001
  2462                           ;	unspecified, using default values
  2463  200001                     	org	2097153
  2464  200001  FF                 	db	255
  2465                           
  2466                           ;Config register IDLOC2 @ 0x200002
  2467                           ;	unspecified, using default values
  2468  200002                     	org	2097154
  2469  200002  FF                 	db	255
  2470                           
  2471                           ;Config register IDLOC3 @ 0x200003
  2472                           ;	unspecified, using default values
  2473  200003                     	org	2097155
  2474  200003  FF                 	db	255
  2475                           
  2476                           ;Config register IDLOC4 @ 0x200004
  2477                           ;	unspecified, using default values
  2478  200004                     	org	2097156
  2479  200004  FF                 	db	255
  2480                           
  2481                           ;Config register IDLOC5 @ 0x200005
  2482                           ;	unspecified, using default values
  2483  200005                     	org	2097157
  2484  200005  FF                 	db	255
  2485                           
  2486                           ;Config register IDLOC6 @ 0x200006
  2487                           ;	unspecified, using default values
  2488  200006                     	org	2097158
  2489  200006  FF                 	db	255
  2490                           
  2491                           ;Config register IDLOC7 @ 0x200007
  2492                           ;	unspecified, using default values
  2493  200007                     	org	2097159
  2494  200007  FF                 	db	255
  2495                           
  2496                           	psect	config
  2497                           
  2498                           ;Config register CONFIG1L @ 0x300000
  2499                           ;	PLL Prescaler Selection bits
  2500                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  2501                           ;	System Clock Postscaler Selection bits
  2502                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2503                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2504                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  2505  300000                     	org	3145728
  2506  300000  21                 	db	33
  2507                           
  2508                           ;Config register CONFIG1H @ 0x300001
  2509                           ;	Oscillator Selection bits
  2510                           ;	FOSC = HS, HS oscillator (HS)
  2511                           ;	Fail-Safe Clock Monitor Enable bit
  2512                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2513                           ;	Internal/External Oscillator Switchover bit
  2514                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2515  300001                     	org	3145729
  2516  300001  0C                 	db	12
  2517                           
  2518                           ;Config register CONFIG2L @ 0x300002
  2519                           ;	Power-up Timer Enable bit
  2520                           ;	PWRT = OFF, PWRT disabled
  2521                           ;	Brown-out Reset Enable bits
  2522                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2523                           ;	Brown-out Reset Voltage bits
  2524                           ;	BORV = 3, Minimum setting 2.05V
  2525                           ;	USB Voltage Regulator Enable bit
  2526                           ;	VREGEN = OFF, USB voltage regulator disabled
  2527  300002                     	org	3145730
  2528  300002  19                 	db	25
  2529                           
  2530                           ;Config register CONFIG2H @ 0x300003
  2531                           ;	Watchdog Timer Enable bit
  2532                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2533                           ;	Watchdog Timer Postscale Select bits
  2534                           ;	WDTPS = 32768, 1:32768
  2535  300003                     	org	3145731
  2536  300003  1E                 	db	30
  2537                           
  2538                           ; Padding undefined space
  2539  300004                     	org	3145732
  2540  300004  FF                 	db	255
  2541                           
  2542                           ;Config register CONFIG3H @ 0x300005
  2543                           ;	CCP2 MUX bit
  2544                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  2545                           ;	PORTB A/D Enable bit
  2546                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2547                           ;	Low-Power Timer 1 Oscillator Enable bit
  2548                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2549                           ;	MCLR Pin Enable bit
  2550                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2551  300005                     	org	3145733
  2552  300005  80                 	db	128
  2553                           
  2554                           ;Config register CONFIG4L @ 0x300006
  2555                           ;	Stack Full/Underflow Reset Enable bit
  2556                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  2557                           ;	Single-Supply ICSP Enable bit
  2558                           ;	LVP = OFF, Single-Supply ICSP disabled
  2559                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2560                           ;	ICPRT = OFF, ICPORT disabled
  2561                           ;	Extended Instruction Set Enable bit
  2562                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2563                           ;	Background Debugger Enable bit
  2564                           ;	DEBUG = 0x1, unprogrammed default
  2565  300006                     	org	3145734
  2566  300006  80                 	db	128
  2567                           
  2568                           ; Padding undefined space
  2569  300007                     	org	3145735
  2570  300007  FF                 	db	255
  2571                           
  2572                           ;Config register CONFIG5L @ 0x300008
  2573                           ;	Code Protection bit
  2574                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2575                           ;	Code Protection bit
  2576                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2577                           ;	Code Protection bit
  2578                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2579                           ;	Code Protection bit
  2580                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2581  300008                     	org	3145736
  2582  300008  0F                 	db	15
  2583                           
  2584                           ;Config register CONFIG5H @ 0x300009
  2585                           ;	Boot Block Code Protection bit
  2586                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2587                           ;	Data EEPROM Code Protection bit
  2588                           ;	CPD = OFF, Data EEPROM is not code-protected
  2589  300009                     	org	3145737
  2590  300009  C0                 	db	192
  2591                           
  2592                           ;Config register CONFIG6L @ 0x30000A
  2593                           ;	Write Protection bit
  2594                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2595                           ;	Write Protection bit
  2596                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2597                           ;	Write Protection bit
  2598                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2599                           ;	Write Protection bit
  2600                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2601  30000A                     	org	3145738
  2602  30000A  0F                 	db	15
  2603                           
  2604                           ;Config register CONFIG6H @ 0x30000B
  2605                           ;	Configuration Register Write Protection bit
  2606                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2607                           ;	Boot Block Write Protection bit
  2608                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2609                           ;	Data EEPROM Write Protection bit
  2610                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2611  30000B                     	org	3145739
  2612  30000B  E0                 	db	224
  2613                           
  2614                           ;Config register CONFIG7L @ 0x30000C
  2615                           ;	Table Read Protection bit
  2616                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2617                           ;	Table Read Protection bit
  2618                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2619                           ;	Table Read Protection bit
  2620                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2621                           ;	Table Read Protection bit
  2622                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2623  30000C                     	org	3145740
  2624  30000C  0F                 	db	15
  2625                           
  2626                           ;Config register CONFIG7H @ 0x30000D
  2627                           ;	Boot Block Table Read Protection bit
  2628                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2629  30000D                     	org	3145741
  2630  30000D  40                 	db	64
  2631                           tosu	equ	0xFFF
  2632                           tosh	equ	0xFFE
  2633                           tosl	equ	0xFFD
  2634                           stkptr	equ	0xFFC
  2635                           pclatu	equ	0xFFB
  2636                           pclath	equ	0xFFA
  2637                           pcl	equ	0xFF9
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           prodh	equ	0xFF4
  2643                           prodl	equ	0xFF3
  2644                           indf0	equ	0xFEF
  2645                           postinc0	equ	0xFEE
  2646                           postdec0	equ	0xFED
  2647                           preinc0	equ	0xFEC
  2648                           plusw0	equ	0xFEB
  2649                           fsr0h	equ	0xFEA
  2650                           fsr0l	equ	0xFE9
  2651                           wreg	equ	0xFE8
  2652                           indf1	equ	0xFE7
  2653                           postinc1	equ	0xFE6
  2654                           postdec1	equ	0xFE5
  2655                           preinc1	equ	0xFE4
  2656                           plusw1	equ	0xFE3
  2657                           fsr1h	equ	0xFE2
  2658                           fsr1l	equ	0xFE1
  2659                           bsr	equ	0xFE0
  2660                           indf2	equ	0xFDF
  2661                           postinc2	equ	0xFDE
  2662                           postdec2	equ	0xFDD
  2663                           preinc2	equ	0xFDC
  2664                           plusw2	equ	0xFDB
  2665                           fsr2h	equ	0xFDA
  2666                           fsr2l	equ	0xFD9
  2667                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     27      84
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Uart_Send_String@info	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_Uart_Init
    _posicionInicial->_servos
    _mensajeInicial->_LCD_Caracter
    _LCD_Caracter->_LCD_EscribeLCD
    _andar->_servos
    _Uart_Send_String->_Uart_Send_Char
    _Uart_Init->___lldiv
    _LCD_CursorOFF->_LCD_EnviaComando
    _LCD_CursorIncr->_LCD_EnviaComando
    _LCD_Borra->_LCD_EnviaComando
    _LCD_2Lineas4Bits5x7->_LCD_EnviaComando
    _LCD_EnviaComando->_LCD_EscribeLCD

Critical Paths under _Interrupcion_TMR0 in COMRAM

    _Interrupcion_TMR0->_Temporizaciones

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupcion_TMR0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupcion_TMR0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupcion_TMR0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupcion_TMR0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupcion_TMR0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupcion_TMR0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupcion_TMR0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupcion_TMR0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4245
                      _LCD_Iniciliza
                          _Uart_Init
                   _Uart_Send_String
                              _andar
                    _borraPosiciones
                     _mensajeInicial
                    _posicionInicial
 ---------------------------------------------------------------------------------
 (1) _posicionInicial                                      0     0      0    1631
                             _servos
 ---------------------------------------------------------------------------------
 (1) _mensajeInicial                                       0     0      0      75
                       _LCD_Caracter
 ---------------------------------------------------------------------------------
 (2) _LCD_Caracter                                         4     4      0      75
                                              5 COMRAM     4     4      0
                     _LCD_EscribeLCD
 ---------------------------------------------------------------------------------
 (1) _borraPosiciones                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _andar                                                2     2      0    1631
                                             11 COMRAM     2     2      0
                             _servos
 ---------------------------------------------------------------------------------
 (2) _servos                                               7     2      5    1631
                                              4 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (1) _Uart_Send_String                                     2     0      2     136
                                              5 COMRAM     2     0      2
                     _Uart_Send_Char
 ---------------------------------------------------------------------------------
 (2) _Uart_Send_Char                                       1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Uart_Init                                           10     6      4     457
                                             17 COMRAM    10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _LCD_Iniciliza                                        1     1      0     315
                                              9 COMRAM     1     1      0
                _LCD_2Lineas4Bits5x7
                          _LCD_Borra
                     _LCD_CursorIncr
                      _LCD_CursorOFF
                     _LCD_EscribeLCD
 ---------------------------------------------------------------------------------
 (2) _LCD_CursorOFF                                        0     0      0      75
                   _LCD_EnviaComando
 ---------------------------------------------------------------------------------
 (2) _LCD_CursorIncr                                       0     0      0      75
                   _LCD_EnviaComando
 ---------------------------------------------------------------------------------
 (2) _LCD_Borra                                            0     0      0      75
                   _LCD_EnviaComando
 ---------------------------------------------------------------------------------
 (2) _LCD_2Lineas4Bits5x7                                  0     0      0      75
                   _LCD_EnviaComando
 ---------------------------------------------------------------------------------
 (3) _LCD_EnviaComando                                     4     4      0      75
                                              5 COMRAM     4     4      0
                     _LCD_EscribeLCD
 ---------------------------------------------------------------------------------
 (3) _LCD_EscribeLCD                                       1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupcion_TMR0                                    0     0      0     620
                    _Temporizaciones
 ---------------------------------------------------------------------------------
 (6) _Temporizaciones                                      4     3      1     620
                                              0 COMRAM     4     3      1
                            _Tim_2us
                           _Tim_50us
 ---------------------------------------------------------------------------------
 (7) _Tim_50us                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Tim_2us                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Iniciliza
     _LCD_2Lineas4Bits5x7
       _LCD_EnviaComando
         _LCD_EscribeLCD
     _LCD_Borra
       _LCD_EnviaComando
     _LCD_CursorIncr
       _LCD_EnviaComando
     _LCD_CursorOFF
       _LCD_EnviaComando
     _LCD_EscribeLCD
   _Uart_Init
     ___lldiv
   _Uart_Send_String
     _Uart_Send_Char
   _andar
     _servos
   _borraPosiciones
   _mensajeInicial
     _LCD_Caracter
       _LCD_EscribeLCD
   _posicionInicial
     _servos

 _Interrupcion_TMR0 (ROOT)
   _Temporizaciones
     _Tim_2us
     _Tim_50us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1B      54       1       89.4%
BITBIGSFRllll       21      0       0      31        0.0%
BITBIGSFRhlh        19      0       0      21        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlhhl        C      0       0      26        0.0%
BITBIGSFRhlll        B      0       0      23        0.0%
BITBIGSFRlhhhh       8      0       0      24        0.0%
BITBIGSFRllh         8      0       0      28        0.0%
BITBIGSFRlhhhlh      7      0       0      25        0.0%
BITBIGSFRlhlh        7      0       0      27        0.0%
BITBIGSFRlllhh       5      0       0      29        0.0%
BITBIGSFRhllh        5      0       0      22        0.0%
BITBIGSFRlllhl       1      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54      32        0.0%
DATA                 0      0      54       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 01 17:41:02 2023

                         _LCD_CursorOFF 0F44                          _LCD_CursorIncr 0F4C  
                         ?_LCD_Caracter 003A                    ?_LCD_2Lineas4Bits5x7 003A  
                                    l94 0DF8                                      u20 0BA8  
                                    u21 0BA4                                      u15 0B7A  
                                    u50 0A60                                      u51 0A5C  
                                    u45 0A32                                      u80 0F2C  
                                    u81 0F28                                     l103 0F42  
                                   l106 0F1A                                     l115 09D8  
                                   l310 0BC4                                     l142 0E36  
                                   l305 0E98                                     l315 0A7C  
                                   l318 0F52                                     l351 0F62  
                                   l345 0F4A                                     l354 0CB4  
                                   l348 0F5A                                     l452 0B10  
                                   l381 0D90                                     l390 0F30  
                                   l459 0B20                                     l387 0F1E  
                                   l396 0E6C                                     u500 0AEE  
                                   u501 0AEA                                     u520 0E6C  
                                   u521 0E68                                     u515 0D58  
                                   u470 0DE8                                     u471 0DE4  
                                   u480 0AA4                                     u481 0AA0  
                                   u490 0AC6                                     u570 0D10  
                                   u491 0AC2                                     u707 093C  
                                   u571 0D0C                                     u717 096C  
                                   u807 0BAA                                     u727 099C  
                                   u817 0BBA                                     u737 09CC  
                                   u747 0DC4                                     u757 0C5C  
                                   u767 0C70                                     u687 0A62  
                                   u777 0C82                                     u697 0A72  
                                   u787 0C90                                     u797 0C9E  
                                   _num 0019        _servo_7@FuncionesMultiservo$F528 0020  
                                   wreg 000FE8                  __end_of_LCD_EscribeLCD 0E9A  
             __end_of_Interrupcion_TMR0 0918                                    l1100 0E82  
                                  l1102 0E8C                                    l1110 0B24  
                                  l1104 0E90                                    l1120 0B4C  
                                  l1112 0B26                                    l1106 0E92  
                                  l1130 0BA8                                    l1122 0B6E  
                                  l1114 0B2A                                    l1108 0E94  
                                  l1132 0BB4                                    l1124 0B8E  
                                  l1116 0B30                                    l1300 0C54  
                                  l1126 0B94                                    l1118 0B3E  
                                  l1310 0C80                                    l1302 0C56  
                                  l2030 0CCE                                    l1128 0B9A  
                                  l1320 0CA4                                    l1312 0C88  
                                  l1304 0C64                                    l1160 09F6  
                                  l1152 09DC                                    l2040 0CE0  
                                  l2032 0CD2                                    l1322 0CA8  
                                  l1314 0C8E                                    l1306 0C6A  
                                  l1170 0A52                                    l1162 0A04  
                                  l1154 09DE                                    l2050 0CF2  
                                  l2042 0CE2                                    l2034 0CD4  
                                  l1324 0CAC                                    l1316 0C96  
                                  l1308 0C7A                                    l1172 0A60  
                                  l1164 0A26                                    l1156 09E2  
                                  l2052 0CF6                                    l2044 0CE4  
                                  l2036 0CD8                                    l2028 0CB6  
                                  l1190 0F44                                    l1326 0CB0  
                                  l1318 0C9C                                    l1270 0F32  
                                  l1174 0A6C                                    l1166 0A46  
                                  l1158 09E8                                    l2054 0D02  
                                  l2046 0CEA                                    l2038 0CDC  
                                  l1192 0F54                                    l1168 0A4C  
                                  l2056 0D10                                    l2048 0CEE  
                                  l1098 0E70                                    l1194 0F5C  
                                  l1290 0C4A                                    l2058 0D18  
                                  l1188 0F4C                                    l1292 0C4C  
                                  l1196 0F1E                                    l1294 0C4E  
                                  l1198 0F2C                                    l1286 0DFA  
                                  l1296 0C50                                    l1288 0C46  
                                  l1298 0C52                                    l1930 0DB0  
                                  l1922 0D94                                    l1940 0A7E  
                                  l1932 0DB8                                    l1924 0DA4  
                                  l1950 0AC6                                    l1942 0A8E  
                                  l1934 0DBE                                    l1926 0DA8  
                                  l1960 0B0A                                    l1952 0AD0  
                                  l1944 0AA4                                    l1936 0DCE  
                                  l1928 0DAC                                    l1954 0AEE  
                                  l1946 0AAC                                    l1938 0DE8  
                                  l1970 0978                                    l1962 0F00  
                                  l1956 0AFE                                    l1948 0AB8  
                                  l1980 0D34                                    l1972 0992  
                                  l1964 0918                                    l1958 0B00  
                                  l1982 0D36                                    l1990 0E3C  
                                  l1974 09C2                                    l1966 0932  
                                  l1984 0D88                                    l1976 0D24  
                                  l1992 0E4C                                    l1968 0948  
                                  l1986 0D8C                                    l1978 0D28  
                                  l1994 0E50                                    l1988 0E38  
                                  STR_1 0801                                    _LATB 000F8A  
                                  _TMR0 000FD6                                    _TMR1 000FCE  
                      ??_mensajeInicial 0043                                    _main 0CB6  
                                  _num1 0017                                    _num2 0015  
                                  _num3 0013                                    _num4 0011  
                                  btemp 0055                          ?_LCD_Iniciliza 003A  
                                  start 000E                          ?_LCD_CursorOFF 003A  
                __end_of_LCD_CursorIncr 0F54                            ___param_bank 000000  
                        ??_LCD_Caracter 003F                        ?_Temporizaciones 003A  
                 ??_LCD_2Lineas4Bits5x7 0043                         __end_of_Tim_2us 0EE2  
                                 ?_main 003A                         __end_of___lldiv 0B22  
                                 _T0CON 000FD5                                   _T1CON 000FCD  
                                 i2l161 0ECE                                   i2l163 0EDC  
                                 i2l155 0EAA                                   i2l164 0EE0  
                                 i2l157 0EB8                                   i2l158 0EBC  
                                 i2l191 0914                                   i2l176 0C44  
                                 i2l185 0912                                   _RCREG 000FAE  
                                 _RCSTA 000FAB                                   _SPBRG 000FAF  
                                 _PORTD 000F83                                   _TRISB 000F93  
                                 _TRISD 000F95                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                         _contador_servos 0028  
                       ?_LCD_EscribeLCD 003A                                   _andar 0918  
                                 tablat 000FF5                        ?_borraPosiciones 003A  
              __end_of_Uart_Send_String 0E6E                                   ttemp5 0056  
                                 ttemp6 0059                                   ttemp7 005D  
                                 status 000FD8                                   wtemp8 0056  
   _pos_servo1@FuncionesMultiservo$F530 001E                         ?_LCD_CursorIncr 003A  
                       __initialization 0EE2                            __end_of_main 0D24  
              __end_of_LCD_EnviaComando 0BC6                        __end_of_Tim_50us 0EBE  
                                ??_main 0055                           __activetblptr 000001  
                     __end_of_LCD_Borra 0F5C                                  ?_andar 003A  
                                _ADCON1 000FC1     _pos_servo4@FuncionesMultiservo$F533 001B  
                                i2l2000 0BE0                                  i2l2010 0BF2  
                                i2l2002 0BE0                                  i2l2020 0C24  
                                i2l2004 0BE4                                  i2l2012 0C08  
                                i2l2100 08E6                                  i2l2022 0C2C  
                                i2l2014 0C1A                                  i2l2006 0BEC  
                                i2l2102 08E8                                  i2l2110 0912  
                                i2l2024 0C30                                  i2l2016 0C20  
                                i2l2008 0BF0                                  i2l2104 08F2  
                                i2l2026 0C32                                  i2l2018 0C20  
                                i2l2106 08F8                                  i2l1180 0EA8  
                                i2l2108 090A                                  i2l2060 0812  
                                i2l1182 0EBE                                  i2l2070 084A  
                                i2l2062 081A                                  i2l1184 0ECA  
                                i2l1176 0E9A                                  i2l2080 087E  
                                i2l2072 084C                                  i2l2064 0828  
                                i2l1186 0ECC                                  i2l1178 0EA6  
                                i2l2090 08B2                                  i2l2082 0880  
                                i2l2074 0856                                  i2l2066 082A  
                                i2l2092 08B4                                  i2l2084 088A  
                                i2l2068 083A                                  i2l2076 085C  
                                i2l2094 08BE                                  i2l2078 086E  
                                i2l2086 0890                                  i2l2088 08A2  
                                i2l2096 08C4                                  i2l2098 08D6  
                                i2l1996 0BC8                                  i2l1998 0BDA  
                       ??_LCD_Iniciliza 0043                                  _SPBRGH 000FB0  
                                i2u6_40 0EB8                                  i2u6_41 0EB4  
                                i2u7_40 0EDC                                  i2u7_41 0ED8  
                       ??_LCD_CursorOFF 0043                               ??_Tim_2us 003A  
                             ??___lldiv 0046                LCD_EnviaComando@comandos 0042  
                                clear_0 0EE8                                  isa$std 000001  
                        _Uart_Send_Char 0F1C                                  _servos 0D92  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                  __end_of_LCD_Caracter 0A7E                              __accesstop 0060  
               __end_of__initialization 0EEE                           ___rparam_used 000001  
                        __pcstackCOMRAM 003A                           __end_of_andar 09DA  
                __end_of_Uart_Send_Char 0F32        _servo_3@FuncionesMultiservo$F524 0024  
                               ??_andar 0045                 Temporizaciones@contador 003D  
                     __end_of_Uart_Init 0D92                               ?_Tim_50us 003A  
                       ?_Uart_Send_Char 003A        _servo_6@FuncionesMultiservo$F527 0021  
                               _BAUDCON 000FB8                                 ?_servos 003E  
                      ??_LCD_EscribeLCD 003E                             Uart_Init@vx 0053  
                               i2u60_40 084A                                 i2u60_41 0846  
                               i2u53_40 0BDA                                 i2u61_40 086E  
                               i2u53_41 0BD6                                 i2u61_41 086A  
                               i2u54_40 0C04                                 i2u62_40 087E  
                               i2u54_41 0C00                                 i2u62_41 087A  
                               i2u55_40 0C1A                                 i2u63_40 08A2  
                               i2u55_41 0C16                                 i2u63_41 089E  
                               i2u56_40 0C44                                 i2u64_40 08B2  
                               i2u56_41 0C40                                 i2u64_41 08AE  
                               i2u65_40 08D6                                 i2u65_41 08D2  
                               i2u66_40 08E6                                 i2u58_40 0828  
                               i2u66_41 08E2                                 i2u58_41 0824  
                               i2u67_40 090A                                 i2u59_40 083A  
                               i2u67_41 0906                                 i2u59_41 0836  
                         _bandera_servo 0009                       ??_posicionInicial 0045  
                      ??_LCD_CursorIncr 0043                       ?_Uart_Send_String 003F  
                  Uart_Send_Char@txData 003E             __end_of_LCD_2Lineas4Bits5x7 0F64  
                            ??_Tim_50us 003A                      ??_Uart_Send_String 0041  
                               __Hparam 0000                                 _Tim_2us 0EBE  
                               __Lparam 0000                                 ___lldiv 0A7E  
                     ?_LCD_EnviaComando 003A                            __psmallconst 0800  
                               __pcinit 0EE2                                 __ramtop 0800  
                    ??_LCD_EnviaComando 003F                                 __ptext0 0CB6  
                               __ptext1 0F00                                 __ptext2 0DFA  
                               __ptext3 09DA                                 __ptext4 0F32  
                               __ptext5 0918                                 __ptext6 0D92  
                               __ptext7 0E38                                 __ptext8 0F1C  
                               __ptext9 0D24                               _T0CONbits 000FD5  
                             _T1CONbits 000FCD                        Temporizaciones@i 003B  
                               _servo_1 0039                                 _servo_2 0038  
                               _servo_3 0037                                 _servo_4 0036  
                               _servo_5 0035                                 _servo_6 0034  
                               _servo_7 0033                                 _servo_8 0032  
                             _LCD_Borra 0F54                          __pintcode_body 0810  
                  end_of_initialization 0EEE                                 int_func 0810  
                       ___lldiv@divisor 0042                           Uart_Init@baud 004B  
                       ___lldiv@counter 004A                               _RCSTAbits 000FAB  
                               postinc0 000FEE                            _LCD_Caracter 09DA  
                             _PORTBbits 000F81                              _pos_servo1 0031  
                            _pos_servo2 0030                              _pos_servo3 002F  
                            _pos_servo4 002E                               _PORTEbits 000F84  
   _pos_servo3@FuncionesMultiservo$F532 001C                               _TRISCbits 000F94  
                             _TRISEbits 000F96                              ?_LCD_Borra 003A  
                 LCD_EscribeLCD@comando 003E                             servos@num_1 0044  
                           servos@num_2 003E                             servos@num_3 003F  
                           servos@num_4 0040                               _TXSTAbits 000FAC  
                 __end_of_LCD_Iniciliza 0CB6                   __end_of_LCD_CursorOFF 0F4C  
                           _BAUDCONbits 000FB8                          __end_of_servos 0DFA  
                   start_initialization 0EE2                       ??_Temporizaciones 003B  
                      ??_Uart_Send_Char 003E                               _Uart_Init 0D24  
      _servo_2@FuncionesMultiservo$F523 0025                                ??_servos 0043  
                     ??_borraPosiciones 003E                         _posicionInicial 0F00  
                           __pbssCOMRAM 0001                             ??_LCD_Borra 0043  
_bandera_servo@FuncionesMultiservo$F521 0001        _servo_5@FuncionesMultiservo$F526 0022  
                              ?_Tim_2us 003A                              ?_Uart_Init 004B  
                             __pintcode 0008                          _mensajeInicial 0DFA  
                              ?___lldiv 003E                Temporizaciones@pos_servo 003A  
                           __smallconst 0800        _servo_8@FuncionesMultiservo$F529 001F  
                     LCD_Caracter@datos 0042                                _LATBbits 000F8A  
                __end_of_mensajeInicial 0E38                                _PIR1bits 000F9E  
               __end_of_posicionInicial 0F1C                               _servo_bit 0027  
                            _ADCON1bits 000FC1                              servos@vel_ 0041  
                           _INTCON2bits 000FF1                                _Tim_50us 0E9A  
                              __Hrparam 0000                             ??_Uart_Init 004F  
                       ?_mensajeInicial 003A                                __Lrparam 0000  
                          __Lsmallconst 0800     _pos_servo2@FuncionesMultiservo$F531 001D  
                       _Temporizaciones 0BC6                                __ptext10 0A7E  
                              __ptext11 0C46                                __ptext20 0E9A  
                              __ptext12 0F44                                __ptext21 0EBE  
                              __ptext13 0F4C                                __ptext14 0F54  
                              __ptext15 0F5C                                __ptext16 0B22  
                              __ptext17 0E6E                                __ptext19 0BC6  
                              _lcd_dato 002D                    Uart_Send_String@info 003F  
                              _aux_port 002C                         _borraPosiciones 0F32  
                              isa$xinst 000000                                int$flags 0055  
                      ?_posicionInicial 003A                        _Uart_Send_String 0E38  
                            _INTCONbits 000FF2                    Temporizaciones@i_504 003C  
                      _LCD_EnviaComando 0B22                                intlevel2 0000  
                      ___lldiv@dividend 003E        _servo_1@FuncionesMultiservo$F522 0026  
                     _LCD_GuardaDatoAux 0029                 __end_of_Temporizaciones 0C46  
                      ___lldiv@quotient 0046                          _LCD_EscribeLCD 0E6E  
                     _Interrupcion_TMR0 0008                     _LCD_2Lineas4Bits5x7 0F5C  
      _servo_4@FuncionesMultiservo$F525 0023                 __end_of_borraPosiciones 0F44  
                       _LCD_GuardaTRISD 002B                      ?_Interrupcion_TMR0 003A  
                        _LCD_GuardaDato 002A                           _LCD_Iniciliza 0C46  
                   ??_Interrupcion_TMR0 003E  
